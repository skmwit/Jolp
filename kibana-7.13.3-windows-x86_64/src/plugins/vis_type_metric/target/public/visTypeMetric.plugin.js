!function(modules){function webpackJsonpCallback(data){for(var moduleId,chunkId,chunkIds=data[0],moreModules=data[1],i=0,resolves=[];i<chunkIds.length;i++)chunkId=chunkIds[i],Object.prototype.hasOwnProperty.call(installedChunks,chunkId)&&installedChunks[chunkId]&&resolves.push(installedChunks[chunkId][0]),installedChunks[chunkId]=0;for(moduleId in moreModules)Object.prototype.hasOwnProperty.call(moreModules,moduleId)&&(modules[moduleId]=moreModules[moduleId]);for(parentJsonpFunction&&parentJsonpFunction(data);resolves.length;)resolves.shift()()}var installedModules={},installedChunks={0:0};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.e=function(chunkId){var promises=[],installedChunkData=installedChunks[chunkId];if(0!==installedChunkData)if(installedChunkData)promises.push(installedChunkData[2]);else{var promise=new Promise((function(resolve,reject){installedChunkData=installedChunks[chunkId]=[resolve,reject]}));promises.push(installedChunkData[2]=promise);var onScriptComplete,script=document.createElement("script");script.charset="utf-8",script.timeout=120,__webpack_require__.nc&&script.setAttribute("nonce",__webpack_require__.nc),script.src=function(chunkId){return __webpack_require__.p+"visTypeMetric.chunk."+chunkId+".js"}(chunkId);var error=new Error;onScriptComplete=function(event){script.onerror=script.onload=null,clearTimeout(timeout);var chunk=installedChunks[chunkId];if(0!==chunk){if(chunk){var errorType=event&&("load"===event.type?"missing":event.type),realSrc=event&&event.target&&event.target.src;error.message="Loading chunk "+chunkId+" failed.\n("+errorType+": "+realSrc+")",error.name="ChunkLoadError",error.type=errorType,error.request=realSrc,chunk[1](error)}installedChunks[chunkId]=void 0}};var timeout=setTimeout((function(){onScriptComplete({type:"timeout",target:script})}),12e4);script.onerror=script.onload=onScriptComplete,document.head.appendChild(script)}return Promise.all(promises)},__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__.oe=function(err){throw console.error(err),err};var jsonpArray=window.visTypeMetric_bundle_jsonpfunction=window.visTypeMetric_bundle_jsonpfunction||[],oldJsonpFunction=jsonpArray.push.bind(jsonpArray);jsonpArray.push=webpackJsonpCallback,jsonpArray=jsonpArray.slice();for(var i=0;i<jsonpArray.length;i++)webpackJsonpCallback(jsonpArray[i]);var parentJsonpFunction=oldJsonpFunction;__webpack_require__(__webpack_require__.s=13)}([function(module,exports){module.exports=__kbnSharedDeps__.React},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18n},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/charts/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEui},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/expressions/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/visDefaultEditor/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/visualizations/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18nReact},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/data/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ReactDom},function(module,exports){module.exports=__kbnSharedDeps__.Lodash},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getFormatService})),__webpack_require__.d(__webpack_exports__,"b",(function(){return setFormatService}));var _kibana_utils_common__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(12);const[getFormatService,setFormatService]=Object(_kibana_utils_common__WEBPACK_IMPORTED_MODULE_0__.createGetterSetter)("metric data.fieldFormats")},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaUtils/common");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(14);__kbnBundles__.define("plugin/visTypeMetric/public",__webpack_require__,15)},function(module,exports,__webpack_require__){__webpack_require__.p=window.__kbnPublicPath__.visTypeMetric},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"plugin",(function(){return public_plugin}));var external_kbnSharedDeps_KbnI18n_=__webpack_require__(1);var public_=__webpack_require__(2);const createMetricVisFn=()=>({name:"metricVis",type:"render",inputTypes:["datatable"],help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.help",{defaultMessage:"Metric visualization"}),args:{percentageMode:{types:["boolean"],default:!1,help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.percentageMode.help",{defaultMessage:"Shows metric in percentage mode. Requires colorRange to be set."})},colorSchema:{types:["string"],default:'"Green to Red"',options:Object.values(public_.vislibColorMaps).map(value=>value.id),help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.colorSchema.help",{defaultMessage:"Color schema to use"})},colorMode:{types:["string"],default:'"None"',options:[public_.ColorMode.None,public_.ColorMode.Labels,public_.ColorMode.Background],help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.colorMode.help",{defaultMessage:"Which part of metric to color"})},colorRange:{types:["range"],multi:!0,default:"{range from=0 to=10000}",help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.colorRange.help",{defaultMessage:"A range object specifying groups of values to which different colors should be applied."})},useRanges:{types:["boolean"],default:!1,help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.useRanges.help",{defaultMessage:"Enabled color ranges."})},invertColors:{types:["boolean"],default:!1,help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.invertColors.help",{defaultMessage:"Inverts the color ranges"})},showLabels:{types:["boolean"],default:!0,help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.showLabels.help",{defaultMessage:"Shows labels under the metric values."})},bgFill:{types:["string"],default:'"#000"',aliases:["backgroundFill","bgColor","backgroundColor"],help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.bgFill.help",{defaultMessage:"Color as html hex code (#123456), html color (red, blue) or rgba value (rgba(255,255,255,1))."})},font:{types:["style"],help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.font.help",{defaultMessage:"Font settings."}),default:"{font size=60}"},subText:{types:["string"],aliases:["label","text","description"],default:'""',help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.subText.help",{defaultMessage:"Custom text to show under the metric"})},metric:{types:["vis_dimension"],help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.metric.help",{defaultMessage:"metric dimension configuration"}),required:!0,multi:!0},bucket:{types:["vis_dimension"],help:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.function.bucket.help",{defaultMessage:"bucket dimension configuration"})}},fn(input,args,handlers){var _handlers$inspectorAd;const dimensions={metrics:args.metric};if(args.bucket&&(dimensions.bucket=args.bucket),args.percentageMode&&(!args.colorRange||0===args.colorRange.length))throw new Error("colorRange must be provided when using percentageMode");const fontSize=Number.parseInt(args.font.spec.fontSize||"",10);return null!=handlers&&null!==(_handlers$inspectorAd=handlers.inspectorAdapters)&&void 0!==_handlers$inspectorAd&&_handlers$inspectorAd.tables&&handlers.inspectorAdapters.tables.logDatatable("default",input),{type:"render",as:"metric_vis",value:{visData:input,visType:"metric",visConfig:{metric:{percentageMode:args.percentageMode,useRanges:args.useRanges,colorSchema:args.colorSchema,metricColorMode:args.colorMode,colorsRange:args.colorRange,labels:{show:args.showLabels},invertColors:args.invertColors,style:{bgFill:args.bgFill,bgColor:args.colorMode===public_.ColorMode.Background,labelColor:args.colorMode===public_.ColorMode.Labels,subText:args.subText,fontSize:fontSize}},dimensions:dimensions}}}}});var external_kbnSharedDeps_React_=__webpack_require__(0),external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_),external_kbnSharedDeps_ElasticEui_=__webpack_require__(3),external_kbnSharedDeps_KbnI18nReact_=__webpack_require__(7),visDefaultEditor_public_=__webpack_require__(5);const metric_vis_options_metricColorMode=[{id:public_.ColorMode.None,label:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.colorModes.noneOptionLabel",{defaultMessage:"None"})},{id:public_.ColorMode.Labels,label:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.colorModes.labelsOptionLabel",{defaultMessage:"Labels"})},{id:public_.ColorMode.Background,label:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.colorModes.backgroundOptionLabel",{defaultMessage:"Background"})}];function MetricVisOptions({stateParams:stateParams,setValue:setValue,setValidity:setValidity,setTouched:setTouched,uiState:uiState}){const setMetricValue=Object(external_kbnSharedDeps_React_.useCallback)((paramName,value)=>setValue("metric",{...stateParams.metric,[paramName]:value}),[setValue,stateParams.metric]),setMetricLabels=Object(external_kbnSharedDeps_React_.useCallback)((paramName,value)=>setMetricValue("labels",{...stateParams.metric.labels,[paramName]:value}),[setMetricValue,stateParams.metric.labels]),setMetricStyle=Object(external_kbnSharedDeps_React_.useCallback)((paramName,value)=>setMetricValue("style",{...stateParams.metric.style,[paramName]:value}),[setMetricValue,stateParams.metric.style]),setColorMode=Object(external_kbnSharedDeps_React_.useCallback)(id=>setMetricValue("metricColorMode",id),[setMetricValue]),metricColorModeLabel=external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.params.color.useForLabel",{defaultMessage:"Use color for"});return external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_React_default.a.Fragment,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiPanel,{paddingSize:"s"},external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTitle,{size:"xs"},external_kbnSharedDeps_React_default.a.createElement("h3",null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_KbnI18nReact_.FormattedMessage,{id:"visTypeMetric.params.settingsTitle",defaultMessage:"Settings"}))),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiSpacer,{size:"s"}),external_kbnSharedDeps_React_default.a.createElement(visDefaultEditor_public_.PercentageModeOption,{"data-test-subj":"metricPercentageMode",percentageMode:stateParams.metric.percentageMode,formatPattern:stateParams.metric.percentageFormatPattern,setValue:setMetricValue}),external_kbnSharedDeps_React_default.a.createElement(visDefaultEditor_public_.SwitchOption,{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.params.showTitleLabel",{defaultMessage:"Show title"}),paramName:"show",value:stateParams.metric.labels.show,setValue:setMetricLabels})),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiSpacer,{size:"s"}),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiPanel,{paddingSize:"s"},external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTitle,{size:"xs"},external_kbnSharedDeps_React_default.a.createElement("h3",null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_KbnI18nReact_.FormattedMessage,{id:"visTypeMetric.params.rangesTitle",defaultMessage:"Ranges"}))),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiSpacer,{size:"s"}),external_kbnSharedDeps_React_default.a.createElement(visDefaultEditor_public_.ColorRanges,{"data-test-subj":"metricColorRange",colorsRange:stateParams.metric.colorsRange,setValue:setMetricValue,setTouched:setTouched,setValidity:setValidity}),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiFormRow,{fullWidth:!0,display:"rowCompressed",label:metricColorModeLabel},external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiButtonGroup,{buttonSize:"compressed",idSelected:stateParams.metric.metricColorMode,isDisabled:1===stateParams.metric.colorsRange.length,isFullWidth:!0,legend:metricColorModeLabel,options:metric_vis_options_metricColorMode,onChange:setColorMode})),external_kbnSharedDeps_React_default.a.createElement(visDefaultEditor_public_.ColorSchemaOptions,{colorSchema:stateParams.metric.colorSchema,colorSchemas:public_.colorSchemas,disabled:1===stateParams.metric.colorsRange.length||stateParams.metric.metricColorMode===public_.ColorMode.None,invertColors:stateParams.metric.invertColors,setValue:setMetricValue,showHelpText:!1,uiState:uiState})),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiSpacer,{size:"s"}),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiPanel,{paddingSize:"s"},external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTitle,{size:"xs"},external_kbnSharedDeps_React_default.a.createElement("h3",null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_KbnI18nReact_.FormattedMessage,{id:"visTypeMetric.params.style.styleTitle",defaultMessage:"Style"}))),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiSpacer,{size:"s"}),external_kbnSharedDeps_React_default.a.createElement(visDefaultEditor_public_.RangeOption,{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.params.style.fontSizeLabel",{defaultMessage:"Metric font size in points"}),min:12,max:120,paramName:"fontSize",value:stateParams.metric.style.fontSize,setValue:setMetricStyle,showInput:!0,showLabels:!0,showValue:!1})))}var data_public_=__webpack_require__(8),external_kbnSharedDeps_Lodash_=__webpack_require__(10),visualizations_public_=__webpack_require__(6),expressions_public_=__webpack_require__(4);const prepareDimension=params=>{const visdimension=Object(expressions_public_.buildExpressionFunction)("visdimension",{accessor:params.accessor});return params.format&&(visdimension.addArgument("format",params.format.id),visdimension.addArgument("formatParams",JSON.stringify(params.format.params))),Object(expressions_public_.buildExpression)([visdimension])},toExpressionAst=(vis,params)=>{var _labels$show;const esaggs=Object(expressions_public_.buildExpressionFunction)("esaggs",{index:Object(expressions_public_.buildExpression)([Object(expressions_public_.buildExpressionFunction)("indexPatternLoad",{id:vis.data.indexPattern.id})]),metricsAtAllLevels:vis.isHierarchical(),partialRows:!1,aggs:vis.data.aggs.aggs.map(agg=>Object(expressions_public_.buildExpression)(agg.toExpressionAst()))}),schemas=Object(visualizations_public_.getVisSchemas)(vis,params),{percentageMode:percentageMode,percentageFormatPattern:percentageFormatPattern,useRanges:useRanges,colorSchema:colorSchema,metricColorMode:metricColorMode,colorsRange:colorsRange,labels:labels,invertColors:invertColors,style:style}=vis.params.metric;!0===Object(external_kbnSharedDeps_Lodash_.get)(vis.params,"metric.percentageMode")&&schemas.metric.forEach(metric=>{metric.format={id:"percent",params:{pattern:percentageFormatPattern}}});const metricVis=Object(expressions_public_.buildExpressionFunction)("metricVis",{percentageMode:percentageMode,colorSchema:colorSchema,colorMode:metricColorMode,useRanges:useRanges,invertColors:invertColors,showLabels:null!==(_labels$show=null==labels?void 0:labels.show)&&void 0!==_labels$show&&_labels$show});style&&(metricVis.addArgument("bgFill",style.bgFill),metricVis.addArgument("font",Object(expressions_public_.buildExpression)("font size="+style.fontSize)),metricVis.addArgument("subText",style.subText)),colorsRange&&colorsRange.forEach(range=>{metricVis.addArgument("colorRange",Object(expressions_public_.buildExpression)(`range from=${range.from} to=${range.to}`))}),schemas.group&&metricVis.addArgument("bucket",prepareDimension(schemas.group[0])),schemas.metric.forEach(metric=>{metricVis.addArgument("metric",prepareDimension(metric))});return Object(expressions_public_.buildExpression)([esaggs,metricVis]).toAst()};var services=__webpack_require__(11),external_kbnSharedDeps_ReactDom_=__webpack_require__(9);const MetricVisComponent=Object(external_kbnSharedDeps_React_.lazy)(()=>__webpack_require__.e(1).then(__webpack_require__.bind(null,28))),metricVisRenderer=()=>({name:"metric_vis",displayName:"metric visualization",reuseDomNode:!0,render:async(domNode,{visData:visData,visConfig:visConfig},handlers)=>{var _visData$rows;handlers.onDestroy(()=>{Object(external_kbnSharedDeps_ReactDom_.unmountComponentAtNode)(domNode)}),Object(external_kbnSharedDeps_ReactDom_.render)(external_kbnSharedDeps_React_default.a.createElement(visualizations_public_.VisualizationContainer,{className:"mtrVis",showNoResult:!(null!==(_visData$rows=visData.rows)&&void 0!==_visData$rows&&_visData$rows.length),handlers:handlers},external_kbnSharedDeps_React_default.a.createElement(MetricVisComponent,{visData:visData,visParams:visConfig,renderComplete:handlers.done,fireEvent:handlers.event})),domNode)}});class plugin_MetricVisPlugin{constructor(initializerContext){var obj,key,value;value=void 0,(key="initializerContext")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,this.initializerContext=initializerContext}setup(core,{expressions:expressions,visualizations:visualizations,charts:charts}){expressions.registerFunction(createMetricVisFn),expressions.registerRenderer(metricVisRenderer),visualizations.createBaseVisualization({name:"metric",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.metricTitle",{defaultMessage:"Metric"}),icon:"visMetric",description:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.metricDescription",{defaultMessage:"Show a calculation as a single number."}),toExpressionAst:toExpressionAst,visConfig:{defaults:{addTooltip:!0,addLegend:!1,type:"metric",metric:{percentageMode:!1,useRanges:!1,colorSchema:public_.ColorSchemas.GreenToRed,metricColorMode:public_.ColorMode.None,colorsRange:[{from:0,to:1e4}],labels:{show:!0},invertColors:!1,style:{bgFill:"#000",bgColor:!1,labelColor:!1,subText:"",fontSize:60}}}},editorConfig:{optionsTemplate:MetricVisOptions,schemas:[{group:data_public_.AggGroupNames.Metrics,name:"metric",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.schemas.metricTitle",{defaultMessage:"Metric"}),min:1,aggFilter:["!std_dev","!geo_centroid","!derivative","!serial_diff","!moving_avg","!cumulative_sum","!geo_bounds","!filtered_metric","!single_percentile"],aggSettings:{top_hits:{allowStrings:!0}},defaults:[{type:"count",schema:"metric"}]},{group:data_public_.AggGroupNames.Buckets,name:"group",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("visTypeMetric.schemas.splitGroupTitle",{defaultMessage:"Split group"}),min:0,max:1,aggFilter:["!geohash_grid","!geotile_grid","!filter"]}]},requiresSearch:!0})}start(core,{data:data}){Object(services.b)(data.fieldFormats)}}function public_plugin(initializerContext){return new plugin_MetricVisPlugin(initializerContext)}}]);