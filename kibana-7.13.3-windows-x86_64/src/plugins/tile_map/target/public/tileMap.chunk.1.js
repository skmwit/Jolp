(window.tileMap_bundle_jsonpfunction=window.tileMap_bundle_jsonpfunction||[]).push([[1,4],{18:function(module,exports,__webpack_require__){"use strict";var memo,isOldIE=function(){return void 0===memo&&(memo=Boolean(window&&document&&document.all&&!window.atob)),memo},getTarget=function(){var memo={};return function(target){if(void 0===memo[target]){var styleTarget=document.querySelector(target);if(window.HTMLIFrameElement&&styleTarget instanceof window.HTMLIFrameElement)try{styleTarget=styleTarget.contentDocument.head}catch(e){styleTarget=null}memo[target]=styleTarget}return memo[target]}}(),stylesInDom=[];function getIndexByIdentifier(identifier){for(var result=-1,i=0;i<stylesInDom.length;i++)if(stylesInDom[i].identifier===identifier){result=i;break}return result}function modulesToDom(list,options){for(var idCountMap={},identifiers=[],i=0;i<list.length;i++){var item=list[i],id=options.base?item[0]+options.base:item[0],count=idCountMap[id]||0,identifier="".concat(id," ").concat(count);idCountMap[id]=count+1;var index=getIndexByIdentifier(identifier),obj={css:item[1],media:item[2],sourceMap:item[3]};-1!==index?(stylesInDom[index].references++,stylesInDom[index].updater(obj)):stylesInDom.push({identifier:identifier,updater:addStyle(obj,options),references:1}),identifiers.push(identifier)}return identifiers}function insertStyleElement(options){var style=document.createElement("style"),attributes=options.attributes||{};if(void 0===attributes.nonce){var nonce=__webpack_require__.nc;nonce&&(attributes.nonce=nonce)}if(Object.keys(attributes).forEach((function(key){style.setAttribute(key,attributes[key])})),"function"==typeof options.insert)options.insert(style);else{var target=getTarget(options.insert||"head");if(!target)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");target.appendChild(style)}return style}var textStore,replaceText=(textStore=[],function(index,replacement){return textStore[index]=replacement,textStore.filter(Boolean).join("\n")});function applyToSingletonTag(style,index,remove,obj){var css=remove?"":obj.media?"@media ".concat(obj.media," {").concat(obj.css,"}"):obj.css;if(style.styleSheet)style.styleSheet.cssText=replaceText(index,css);else{var cssNode=document.createTextNode(css),childNodes=style.childNodes;childNodes[index]&&style.removeChild(childNodes[index]),childNodes.length?style.insertBefore(cssNode,childNodes[index]):style.appendChild(cssNode)}}function applyToTag(style,options,obj){var css=obj.css,media=obj.media,sourceMap=obj.sourceMap;if(media?style.setAttribute("media",media):style.removeAttribute("media"),sourceMap&&btoa&&(css+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))))," */")),style.styleSheet)style.styleSheet.cssText=css;else{for(;style.firstChild;)style.removeChild(style.firstChild);style.appendChild(document.createTextNode(css))}}var singleton=null,singletonCounter=0;function addStyle(obj,options){var style,update,remove;if(options.singleton){var styleIndex=singletonCounter++;style=singleton||(singleton=insertStyleElement(options)),update=applyToSingletonTag.bind(null,style,styleIndex,!1),remove=applyToSingletonTag.bind(null,style,styleIndex,!0)}else style=insertStyleElement(options),update=applyToTag.bind(null,style,options),remove=function(){!function(style){if(null===style.parentNode)return!1;style.parentNode.removeChild(style)}(style)};return update(obj),function(newObj){if(newObj){if(newObj.css===obj.css&&newObj.media===obj.media&&newObj.sourceMap===obj.sourceMap)return;update(obj=newObj)}else remove()}}module.exports=function(list,options){(options=options||{}).singleton||"boolean"==typeof options.singleton||(options.singleton=isOldIE());var lastIdentifiers=modulesToDom(list=list||[],options);return function(newList){if(newList=newList||[],"[object Array]"===Object.prototype.toString.call(newList)){for(var i=0;i<lastIdentifiers.length;i++){var index=getIndexByIdentifier(lastIdentifiers[i]);stylesInDom[index].references--}for(var newLastIdentifiers=modulesToDom(newList,options),_i=0;_i<lastIdentifiers.length;_i++){var _index=getIndexByIdentifier(lastIdentifiers[_i]);0===stylesInDom[_index].references&&(stylesInDom[_index].updater(),stylesInDom.splice(_index,1))}lastIdentifiers=newLastIdentifiers}}}},19:function(module,exports,__webpack_require__){"use strict";module.exports=function(useSourceMap){var list=[];return list.toString=function(){return this.map((function(item){var content=function(item,useSourceMap){var content=item[1]||"",cssMapping=item[3];if(!cssMapping)return content;if(useSourceMap&&"function"==typeof btoa){var sourceMapping=(sourceMap=cssMapping,base64=btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))),data="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64),"/*# ".concat(data," */")),sourceURLs=cssMapping.sources.map((function(source){return"/*# sourceURL=".concat(cssMapping.sourceRoot||"").concat(source," */")}));return[content].concat(sourceURLs).concat([sourceMapping]).join("\n")}var sourceMap,base64,data;return[content].join("\n")}(item,useSourceMap);return item[2]?"@media ".concat(item[2]," {").concat(content,"}"):content})).join("")},list.i=function(modules,mediaQuery,dedupe){"string"==typeof modules&&(modules=[[null,modules,""]]);var alreadyImportedModules={};if(dedupe)for(var i=0;i<this.length;i++){var id=this[i][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _i=0;_i<modules.length;_i++){var item=[].concat(modules[_i]);dedupe&&alreadyImportedModules[item[0]]||(mediaQuery&&(item[2]?item[2]="".concat(mediaQuery," and ").concat(item[2]):item[2]=mediaQuery),list.push(item))}},list}},22:function(module,__webpack_exports__,__webpack_require__){"use strict";function refineInterval(interval,cd,mask){cd&mask?interval[0]=(interval[0]+interval[1])/2:interval[1]=(interval[0]+interval[1])/2}function geoContains(collar,bounds){return!(!bounds||!collar)&&(!(bounds.top_left.lat>collar.top_left.lat||bounds.top_left.lon<collar.top_left.lon)&&!(bounds.bottom_right.lat<collar.bottom_right.lat||bounds.bottom_right.lon>collar.bottom_right.lon))}__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"convertToGeoJson",(function(){return convertToGeoJson})),__webpack_require__.d(__webpack_exports__,"geoContains",(function(){return geoContains}));const gridAtEquator={1:[5009400,4992600],2:[1252300,624100],3:[156500,156e3],4:[39100,19500],5:[4900,4900],6:[1200,609.4],7:[152.9,152.4],8:[38.2,19],9:[4.8,4.8],10:[1.2,.595],11:[.149,.149],12:[.037,.019]};function convertToGeoJson(tabifiedResponse,{geohash:geohash,geocentroid:geocentroid,metric:metric}){let features,min=1/0,max=-1/0;if(tabifiedResponse&&tabifiedResponse.rows){const table=tabifiedResponse,geohashColumn=geohash?table.columns[geohash.accessor]:null;if(geohashColumn){const metricColumn=table.columns[metric.accessor],geocentroidColumn=geocentroid?table.columns[geocentroid.accessor]:null;features=table.rows.map(row=>{const geohashValue=row[geohashColumn.id];if(!geohashValue)return!1;const geohashLocation=function(geohash){const BITS=[16,8,4,2,1];let isEven=!0;const lat=[],lon=[];lat[0]=-90,lat[1]=90,lon[0]=-180,lon[1]=180;let latErr=90,lonErr=180;return[...geohash].forEach(nextChar=>{const cd="0123456789bcdefghjkmnpqrstuvwxyz".indexOf(nextChar);for(let j=0;j<5;j++){const mask=BITS[j];isEven?(lonErr=lonErr/=2,refineInterval(lon,cd,mask)):(latErr=latErr/=2,refineInterval(lat,cd,mask)),isEven=!isEven}}),lat[2]=(lat[0]+lat[1])/2,lon[2]=(lon[0]+lon[1])/2,{latitude:lat,longitude:lon}}(geohashValue);let pointCoordinates;if(geocentroidColumn){const location=row[geocentroidColumn.id];pointCoordinates=[location.lon,location.lat]}else pointCoordinates=[geohashLocation.longitude[2],geohashLocation.latitude[2]];const rectangle=[[geohashLocation.latitude[0],geohashLocation.longitude[0]],[geohashLocation.latitude[0],geohashLocation.longitude[1]],[geohashLocation.latitude[1],geohashLocation.longitude[1]],[geohashLocation.latitude[1],geohashLocation.longitude[0]]],centerLatLng=[geohashLocation.latitude[2],geohashLocation.longitude[2]];null!=geohash&&geohash.params.useGeocentroid&&(pointCoordinates[0]=clampGrid(pointCoordinates[0],geohashLocation.longitude[0],geohashLocation.longitude[1]),pointCoordinates[1]=clampGrid(pointCoordinates[1],geohashLocation.latitude[0],geohashLocation.latitude[1]));const value=row[metricColumn.id];return min=Math.min(min,value),max=Math.max(max,value),{type:"Feature",geometry:{type:"Point",coordinates:pointCoordinates},properties:{geohash:geohashValue,geohash_meta:{center:centerLatLng,rectangle:rectangle},value:value}}}).filter(row=>!!row)}else features=[]}else features=[];const convertedData={featureCollection:{type:"FeatureCollection",features:features},meta:{min:min,max:max,geohashPrecision:null==geohash?void 0:geohash.params.precision,geohashGridDimensionsAtEquator:null!=geohash&&geohash.params.precision?(precision=geohash.params.precision,gridAtEquator[precision]):void 0}};var precision;return geohash&&geohash.accessor&&(convertedData.meta.geohash=tabifiedResponse.columns[geohash.accessor].meta),convertedData}function clampGrid(val,min,max){return val>max?val=max:val<min&&(val=min),val}},23:function(module,exports,__webpack_require__){switch(window.__kbnThemeTag__){case"v7dark":return __webpack_require__(24);case"v7light":return __webpack_require__(26);case"v8dark":return __webpack_require__(28);case"v8light":return __webpack_require__(30)}},24:function(module,exports,__webpack_require__){var api=__webpack_require__(18),content=__webpack_require__(25);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},25:function(module,exports,__webpack_require__){(exports=__webpack_require__(19)(!1)).push([module.i,".tlmChart__wrapper,.tlmChart{flex:1 1 0;display:flex}\n",""]),module.exports=exports},26:function(module,exports,__webpack_require__){var api=__webpack_require__(18),content=__webpack_require__(27);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},27:function(module,exports,__webpack_require__){(exports=__webpack_require__(19)(!1)).push([module.i,".tlmChart__wrapper,.tlmChart{flex:1 1 0;display:flex}\n",""]),module.exports=exports},28:function(module,exports,__webpack_require__){var api=__webpack_require__(18),content=__webpack_require__(29);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},29:function(module,exports,__webpack_require__){(exports=__webpack_require__(19)(!1)).push([module.i,".tlmChart__wrapper,.tlmChart{flex:1 1 0;display:flex}\n",""]),module.exports=exports},30:function(module,exports,__webpack_require__){var api=__webpack_require__(18),content=__webpack_require__(31);"string"==typeof(content=content.__esModule?content.default:content)&&(content=[[module.i,content,""]]);var options={insert:"head",singleton:!1};api(content,options);module.exports=content.locals||{}},31:function(module,exports,__webpack_require__){(exports=__webpack_require__(19)(!1)).push([module.i,".tlmChart__wrapper,.tlmChart{flex:1 1 0;display:flex}\n",""]),module.exports=exports},33:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"default",(function(){return TileMapVisualization}));var external_kbnSharedDeps_React_=__webpack_require__(2),external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_),external_kbnSharedDeps_ElasticEui_=__webpack_require__(13),external_kbnSharedDeps_Lodash_=__webpack_require__(7),services=__webpack_require__(0),public_=__webpack_require__(8),external_kbnSharedDeps_KbnI18n_=__webpack_require__(1);function tooltipFormatter(metricTitle,metricFormat,feature){return feature?[{label:metricTitle,value:metricFormat(feature.properties.value)},{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("tileMap.tooltipFormatter.latitudeLabel",{defaultMessage:"Latitude"}),value:feature.geometry.coordinates[1]},{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("tileMap.tooltipFormatter.longitudeLabel",{defaultMessage:"Longitude"}),value:feature.geometry.coordinates[0]}]:""}var utils=__webpack_require__(22);const createTileMapVisualization=dependencies=>{const{getZoomPrecision:getZoomPrecision,getPrecision:getPrecision,BaseMapsVisualization:BaseMapsVisualization}=dependencies;return class extends BaseMapsVisualization{constructor(element,handlers,initialVisParams){var obj,key,value;super(element,handlers,initialVisParams),value=()=>{const geohashAgg=this._getGeoHashAgg();if(!geohashAgg)return;const updateVarsObject={name:"bounds",data:{}},mapCollar=function(bounds){const topLeft=bounds.top_left,bottomRight=bounds.bottom_right;let latDiff=Object(external_kbnSharedDeps_Lodash_.round)(Math.abs(topLeft.lat-bottomRight.lat),5);const lonDiff=Object(external_kbnSharedDeps_Lodash_.round)(Math.abs(bottomRight.lon-topLeft.lon),5);0===latDiff&&(latDiff=lonDiff);const latDelta=.5*latDiff;let topLeftLat=Object(external_kbnSharedDeps_Lodash_.round)(topLeft.lat,5)+latDelta;topLeftLat>90&&(topLeftLat=90);let bottomRightLat=Object(external_kbnSharedDeps_Lodash_.round)(bottomRight.lat,5)-latDelta;bottomRightLat<-90&&(bottomRightLat=-90);const lonDelta=.5*lonDiff;let topLeftLon=Object(external_kbnSharedDeps_Lodash_.round)(topLeft.lon,5)-lonDelta;topLeftLon<-180&&(topLeftLon=-180);let bottomRightLon=Object(external_kbnSharedDeps_Lodash_.round)(bottomRight.lon,5)+lonDelta;return bottomRightLon>180&&(bottomRightLon=180),{top_left:{lat:topLeftLat,lon:topLeftLon},bottom_right:{lat:bottomRightLat,lon:bottomRightLon}}}(this._kibanaMap.getBounds());Object(utils.geoContains)(geohashAgg.sourceParams.params.boundingBox,mapCollar)?updateVarsObject.data.boundingBox=geohashAgg.sourceParams.params.boundingBox:updateVarsObject.data.boundingBox={top_left:mapCollar.top_left,bottom_right:mapCollar.bottom_right};const zoomPrecision=getZoomPrecision();updateVarsObject.data.precision=geohashAgg.sourceParams.params.autoPrecision?zoomPrecision[this.handlers.uiState.get("mapZoom")]:getPrecision(geohashAgg.sourceParams.params.precision),this.handlers.event(updateVarsObject)},(key="updateGeohashAgg")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,this._geohashLayer=null,this._tooltipFormatter=Object(public_.mapTooltipProvider)(element,tooltipFormatter)}async render(esResponse,visParams){Object(services.c)().loadFontAwesome(),await super.render(esResponse,visParams)}async _makeKibanaMap(){await super._makeKibanaMap(this._params);let previousPrecision=this._kibanaMap.getGeohashPrecision(),precisionChange=!1;this.handlers.uiState.on("change",prop=>{"mapZoom"!==prop&&"mapCenter"!==prop||this.updateGeohashAgg()}),this._kibanaMap.on("zoomchange",()=>{precisionChange=previousPrecision!==this._kibanaMap.getGeohashPrecision(),previousPrecision=this._kibanaMap.getGeohashPrecision()}),this._kibanaMap.on("zoomend",()=>{const geohashAgg=this._getGeoHashAgg();if(!geohashAgg)return;("boolean"!=typeof geohashAgg.sourceParams.params.autoPrecision||geohashAgg.sourceParams.params.autoPrecision)&&(precisionChange?this.updateGeohashAgg():this._updateData(this._geoJsonFeatureCollectionAndMeta))}),this._kibanaMap.addDrawControl(),this._kibanaMap.on("drawCreated:rectangle",event=>{const geohashAgg=this._getGeoHashAgg();this.addSpatialFilter(geohashAgg,"geo_bounding_box",event.bounds)}),this._kibanaMap.on("drawCreated:polygon",event=>{const geohashAgg=this._getGeoHashAgg();this.addSpatialFilter(geohashAgg,"geo_polygon",{points:event.points})})}async _updateData(geojsonFeatureCollectionAndMeta){if("Heatmap"===this._getMapsParams().mapType||geojsonFeatureCollectionAndMeta!==this._geoJsonFeatureCollectionAndMeta){if(this._geohashLayer&&(this._kibanaMap.removeLayer(this._geohashLayer),this._geohashLayer=null),!geojsonFeatureCollectionAndMeta)return this._geoJsonFeatureCollectionAndMeta=null,this._kibanaMap.removeLayer(this._geohashLayer),void(this._geohashLayer=null);this._geoJsonFeatureCollectionAndMeta&&geojsonFeatureCollectionAndMeta.featureCollection.features.length||(this._geoJsonFeatureCollectionAndMeta=geojsonFeatureCollectionAndMeta,this.updateGeohashAgg()),this._geoJsonFeatureCollectionAndMeta=geojsonFeatureCollectionAndMeta,this._recreateGeohashLayer()}}async _recreateGeohashLayer(){const{GeohashLayer:GeohashLayer}=await __webpack_require__.e(2).then(__webpack_require__.bind(null,32));this._geohashLayer&&(this._kibanaMap.removeLayer(this._geohashLayer),this._geohashLayer=null);const geohashOptions=this._getGeohashOptions();this._geohashLayer=new GeohashLayer(this._geoJsonFeatureCollectionAndMeta.featureCollection,this._geoJsonFeatureCollectionAndMeta.meta,geohashOptions,this._kibanaMap.getZoomLevel(),this._kibanaMap,(await Object(public_.lazyLoadMapsLegacyModules)()).L),this._kibanaMap.addLayer(this._geohashLayer)}async _updateParams(){await super._updateParams(),this._kibanaMap.setDesaturateBaseLayer(this._params.isDesaturated);const geohashOptions=this._getGeohashOptions();this._geohashLayer&&this._geohashLayer.isReusable(geohashOptions)||(this._geoJsonFeatureCollectionAndMeta&&this._recreateGeohashLayer(),this._updateData(this._geoJsonFeatureCollectionAndMeta))}_getGeohashOptions(){const newParams=this._getMapsParams(),metricDimension=this._params.dimensions.metric,metricLabel=metricDimension?metricDimension.label:"",metricFormat=Object(services.b)().deserialize(metricDimension&&metricDimension.format);return{label:metricLabel,valueFormatter:this._geoJsonFeatureCollectionAndMeta?metricFormat.getConverterFor("text"):null,tooltipFormatter:this._geoJsonFeatureCollectionAndMeta?this._tooltipFormatter.bind(null,metricLabel,metricFormat.getConverterFor("text")):null,mapType:newParams.mapType,isFilteredByCollar:this._isFilteredByCollar(),colorRamp:newParams.colorSchema,heatmap:{heatClusterSize:newParams.heatClusterSize}}}addSpatialFilter(agg,filterName,filterData){if(!agg)return;const indexPatternName=agg.indexPatternId,field=agg.field,filter={meta:{negate:!1,index:indexPatternName}};filter[filterName]={ignore_unmapped:!0},filter[filterName][field]=filterData;const{filterManager:filterManager}=Object(services.d)();filterManager.addFilters([filter])}_getGeoHashAgg(){return this._geoJsonFeatureCollectionAndMeta&&this._geoJsonFeatureCollectionAndMeta.meta.geohash}_isFilteredByCollar(){const agg=this._getGeoHashAgg();return!!agg&&Object(external_kbnSharedDeps_Lodash_.get)(agg,"sourceParams.params.isFilteredByCollar",!1)}}};__webpack_require__(23);const TileMapVisualization=({deps:deps,handlers:handlers,visData:visData,visConfig:visConfig})=>{const chartDiv=Object(external_kbnSharedDeps_React_.useRef)(null),visController=Object(external_kbnSharedDeps_React_.useRef)(null),isFirstRender=Object(external_kbnSharedDeps_React_.useRef)(!0),uiState=handlers.uiState;Object(external_kbnSharedDeps_React_.useEffect)(()=>{if(chartDiv.current&&isFirstRender.current){isFirstRender.current=!1;const Controller=createTileMapVisualization(deps);visController.current=new Controller(chartDiv.current,handlers,visConfig)}},[deps,handlers,visConfig,visData]),Object(external_kbnSharedDeps_React_.useEffect)(()=>{var _visController$curren;null===(_visController$curren=visController.current)||void 0===_visController$curren||_visController$curren.render(visData,visConfig).then(handlers.done)},[visData,visConfig,handlers.done]),Object(external_kbnSharedDeps_React_.useEffect)(()=>{const onUiStateChange=()=>{var _visController$curren2;null===(_visController$curren2=visController.current)||void 0===_visController$curren2||_visController$curren2.render().then(handlers.done)};return uiState.on("change",onUiStateChange),()=>{uiState.off("change",onUiStateChange)}},[uiState,handlers.done]),Object(external_kbnSharedDeps_React_.useEffect)(()=>()=>{var _visController$curren3;null===(_visController$curren3=visController.current)||void 0===_visController$curren3||_visController$curren3.destroy(),visController.current=null},[]);const updateChartSize=Object(external_kbnSharedDeps_React_.useMemo)(()=>Object(external_kbnSharedDeps_Lodash_.throttle)(()=>{var _visController$curren4;return null===(_visController$curren4=visController.current)||void 0===_visController$curren4?void 0:_visController$curren4.resize()},300),[]);return external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiResizeObserver,{onResize:updateChartSize},resizeRef=>external_kbnSharedDeps_React_default.a.createElement("div",{className:"tlmChart__wrapper",ref:resizeRef},external_kbnSharedDeps_React_default.a.createElement("div",{className:"tlmChart",ref:chartDiv})))}}}]);