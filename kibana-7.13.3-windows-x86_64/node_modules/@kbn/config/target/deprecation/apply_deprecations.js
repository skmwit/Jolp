"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyDeprecations = void 0;
const lodash_1 = require("lodash");
const noopAddDeprecationFactory = () => () => undefined;
/**
 * Applies deprecations on given configuration and passes addDeprecation hook.
 * This hook is used for logging any deprecation warning using provided logger.
 * This hook is used for exposing deprecated configs that must be handled by the user before upgrading to next major.
 *
 * @internal
 */
const applyDeprecations = (config, deprecations, createAddDeprecation = noopAddDeprecationFactory) => {
    let processed = lodash_1.cloneDeep(config);
    deprecations.forEach(({ deprecation, path }) => {
        processed = deprecation(processed, path, createAddDeprecation(path));
    });
    return processed;
};
exports.applyDeprecations = applyDeprecations;
//# sourceMappingURL=apply_deprecations.js.map