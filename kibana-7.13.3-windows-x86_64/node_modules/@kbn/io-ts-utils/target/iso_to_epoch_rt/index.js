"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isoToEpochRt = void 0;
const tslib_1 = require("tslib");
const t = tslib_1.__importStar(require("io-ts"));
const Either_1 = require("fp-ts/lib/Either");
// Checks whether a string is a valid ISO timestamp,
// and returns an epoch timestamp
exports.isoToEpochRt = new t.Type('isoToEpochRt', t.number.is, (input, context) => Either_1.either.chain(t.string.validate(input, context), (str) => {
    const epochDate = new Date(str).getTime();
    return isNaN(epochDate) ? t.failure(input, context) : t.success(epochDate);
}), (output) => new Date(output).toISOString());
//# sourceMappingURL=index.js.map