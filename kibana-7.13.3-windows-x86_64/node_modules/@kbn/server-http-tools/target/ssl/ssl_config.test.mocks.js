"use strict";
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockReadPkcs12Truststore = exports.mockReadPkcs12Keystore = exports.mockReadFileSync = void 0;
exports.mockReadFileSync = jest.fn();
jest.mock('fs', () => {
    return { readFileSync: exports.mockReadFileSync };
});
exports.mockReadPkcs12Keystore = jest.fn();
exports.mockReadPkcs12Truststore = jest.fn();
jest.mock('@kbn/crypto', () => ({
    readPkcs12Keystore: exports.mockReadPkcs12Keystore,
    readPkcs12Truststore: exports.mockReadPkcs12Truststore,
}));
//# sourceMappingURL=ssl_config.test.mocks.js.map