/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.apm_bundle_jsonpfunction=window.apm_bundle_jsonpfunction||[]).push([[11],{1248:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"fetchObservabilityOverviewPageData",(function(){return fetchObservabilityOverviewPageData})),__webpack_require__.d(__webpack_exports__,"getHasData",(function(){return getHasData}));var _createCallApmApi__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(61);__webpack_require__.d(__webpack_exports__,"createCallApmApi",(function(){return _createCallApmApi__WEBPACK_IMPORTED_MODULE_0__.b}));const fetchObservabilityOverviewPageData=async({absoluteTime:absoluteTime,relativeTime:relativeTime,bucketSize:bucketSize})=>{const data=await Object(_createCallApmApi__WEBPACK_IMPORTED_MODULE_0__.a)({endpoint:"GET /api/apm/observability_overview",signal:null,params:{query:{start:new Date(absoluteTime.start).toISOString(),end:new Date(absoluteTime.end).toISOString(),bucketSize:bucketSize}}}),{serviceCount:serviceCount,transactionPerMinute:transactionPerMinute}=data;return{appLink:`/app/apm/services?rangeFrom=${relativeTime.start}&rangeTo=${relativeTime.end}`,stats:{services:{type:"number",value:serviceCount},transactions:{type:"number",value:transactionPerMinute.value||0}},series:{transactions:{coordinates:transactionPerMinute.timeseries}}}};async function getHasData(){return(await Object(_createCallApmApi__WEBPACK_IMPORTED_MODULE_0__.a)({endpoint:"GET /api/apm/observability_overview/has_data",signal:null})).hasData}}}]);