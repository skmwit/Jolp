/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */!function(modules){function webpackJsonpCallback(data){for(var moduleId,chunkId,chunkIds=data[0],moreModules=data[1],i=0,resolves=[];i<chunkIds.length;i++)chunkId=chunkIds[i],Object.prototype.hasOwnProperty.call(installedChunks,chunkId)&&installedChunks[chunkId]&&resolves.push(installedChunks[chunkId][0]),installedChunks[chunkId]=0;for(moduleId in moreModules)Object.prototype.hasOwnProperty.call(moreModules,moduleId)&&(modules[moduleId]=moreModules[moduleId]);for(parentJsonpFunction&&parentJsonpFunction(data);resolves.length;)resolves.shift()()}var installedModules={},installedChunks={0:0};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.e=function(chunkId){var promises=[],installedChunkData=installedChunks[chunkId];if(0!==installedChunkData)if(installedChunkData)promises.push(installedChunkData[2]);else{var promise=new Promise((function(resolve,reject){installedChunkData=installedChunks[chunkId]=[resolve,reject]}));promises.push(installedChunkData[2]=promise);var onScriptComplete,script=document.createElement("script");script.charset="utf-8",script.timeout=120,__webpack_require__.nc&&script.setAttribute("nonce",__webpack_require__.nc),script.src=function(chunkId){return __webpack_require__.p+"maps.chunk."+chunkId+".js"}(chunkId);var error=new Error;onScriptComplete=function(event){script.onerror=script.onload=null,clearTimeout(timeout);var chunk=installedChunks[chunkId];if(0!==chunk){if(chunk){var errorType=event&&("load"===event.type?"missing":event.type),realSrc=event&&event.target&&event.target.src;error.message="Loading chunk "+chunkId+" failed.\n("+errorType+": "+realSrc+")",error.name="ChunkLoadError",error.type=errorType,error.request=realSrc,chunk[1](error)}installedChunks[chunkId]=void 0}};var timeout=setTimeout((function(){onScriptComplete({type:"timeout",target:script})}),12e4);script.onerror=script.onload=onScriptComplete,document.head.appendChild(script)}return Promise.all(promises)},__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__.oe=function(err){throw console.error(err),err};var jsonpArray=window.maps_bundle_jsonpfunction=window.maps_bundle_jsonpfunction||[],oldJsonpFunction=jsonpArray.push.bind(jsonpArray);jsonpArray.push=webpackJsonpCallback,jsonpArray=jsonpArray.slice();for(var i=0;i<jsonpArray.length;i++)webpackJsonpCallback(jsonpArray[i]);var parentJsonpFunction=oldJsonpFunction;__webpack_require__(__webpack_require__.s=20)}([function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"EMS_APP_NAME",(function(){return EMS_APP_NAME})),__webpack_require__.d(__webpack_exports__,"EMS_CATALOGUE_PATH",(function(){return EMS_CATALOGUE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_FILES_CATALOGUE_PATH",(function(){return EMS_FILES_CATALOGUE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_FILES_API_PATH",(function(){return EMS_FILES_API_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_FILES_DEFAULT_JSON_PATH",(function(){return EMS_FILES_DEFAULT_JSON_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_GLYPHS_PATH",(function(){return EMS_GLYPHS_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_SPRITES_PATH",(function(){return EMS_SPRITES_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_CATALOGUE_PATH",(function(){return EMS_TILES_CATALOGUE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_API_PATH",(function(){return EMS_TILES_API_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_RASTER_STYLE_PATH",(function(){return EMS_TILES_RASTER_STYLE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_RASTER_TILE_PATH",(function(){return EMS_TILES_RASTER_TILE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_VECTOR_STYLE_PATH",(function(){return EMS_TILES_VECTOR_STYLE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_VECTOR_SOURCE_PATH",(function(){return EMS_TILES_VECTOR_SOURCE_PATH})),__webpack_require__.d(__webpack_exports__,"EMS_TILES_VECTOR_TILE_PATH",(function(){return EMS_TILES_VECTOR_TILE_PATH})),__webpack_require__.d(__webpack_exports__,"MAP_SAVED_OBJECT_TYPE",(function(){return MAP_SAVED_OBJECT_TYPE})),__webpack_require__.d(__webpack_exports__,"APP_ID",(function(){return APP_ID})),__webpack_require__.d(__webpack_exports__,"APP_ICON",(function(){return APP_ICON})),__webpack_require__.d(__webpack_exports__,"APP_ICON_SOLUTION",(function(){return APP_ICON_SOLUTION})),__webpack_require__.d(__webpack_exports__,"APP_NAME",(function(){return APP_NAME})),__webpack_require__.d(__webpack_exports__,"INITIAL_LAYERS_KEY",(function(){return INITIAL_LAYERS_KEY})),__webpack_require__.d(__webpack_exports__,"MAPS_APP_PATH",(function(){return MAPS_APP_PATH})),__webpack_require__.d(__webpack_exports__,"MAP_PATH",(function(){return MAP_PATH})),__webpack_require__.d(__webpack_exports__,"GIS_API_PATH",(function(){return GIS_API_PATH})),__webpack_require__.d(__webpack_exports__,"INDEX_SETTINGS_API_PATH",(function(){return INDEX_SETTINGS_API_PATH})),__webpack_require__.d(__webpack_exports__,"FONTS_API_PATH",(function(){return FONTS_API_PATH})),__webpack_require__.d(__webpack_exports__,"INDEX_SOURCE_API_PATH",(function(){return INDEX_SOURCE_API_PATH})),__webpack_require__.d(__webpack_exports__,"API_ROOT_PATH",(function(){return API_ROOT_PATH})),__webpack_require__.d(__webpack_exports__,"MVT_GETTILE_API_PATH",(function(){return MVT_GETTILE_API_PATH})),__webpack_require__.d(__webpack_exports__,"MVT_GETGRIDTILE_API_PATH",(function(){return MVT_GETGRIDTILE_API_PATH})),__webpack_require__.d(__webpack_exports__,"MVT_SOURCE_LAYER_NAME",(function(){return MVT_SOURCE_LAYER_NAME})),__webpack_require__.d(__webpack_exports__,"KBN_TOO_MANY_FEATURES_PROPERTY",(function(){return KBN_TOO_MANY_FEATURES_PROPERTY})),__webpack_require__.d(__webpack_exports__,"KBN_TOO_MANY_FEATURES_IMAGE_ID",(function(){return KBN_TOO_MANY_FEATURES_IMAGE_ID})),__webpack_require__.d(__webpack_exports__,"KBN_IS_CENTROID_FEATURE",(function(){return KBN_IS_CENTROID_FEATURE})),__webpack_require__.d(__webpack_exports__,"MVT_TOKEN_PARAM_NAME",(function(){return MVT_TOKEN_PARAM_NAME})),__webpack_require__.d(__webpack_exports__,"getNewMapPath",(function(){return getNewMapPath})),__webpack_require__.d(__webpack_exports__,"getExistingMapPath",(function(){return getExistingMapPath})),__webpack_require__.d(__webpack_exports__,"getEditPath",(function(){return getEditPath})),__webpack_require__.d(__webpack_exports__,"LAYER_TYPE",(function(){return LAYER_TYPE})),__webpack_require__.d(__webpack_exports__,"SOURCE_TYPES",(function(){return SOURCE_TYPES})),__webpack_require__.d(__webpack_exports__,"FIELD_ORIGIN",(function(){return FIELD_ORIGIN})),__webpack_require__.d(__webpack_exports__,"JOIN_FIELD_NAME_PREFIX",(function(){return JOIN_FIELD_NAME_PREFIX})),__webpack_require__.d(__webpack_exports__,"META_DATA_REQUEST_ID_SUFFIX",(function(){return META_DATA_REQUEST_ID_SUFFIX})),__webpack_require__.d(__webpack_exports__,"FORMATTERS_DATA_REQUEST_ID_SUFFIX",(function(){return FORMATTERS_DATA_REQUEST_ID_SUFFIX})),__webpack_require__.d(__webpack_exports__,"SOURCE_DATA_REQUEST_ID",(function(){return SOURCE_DATA_REQUEST_ID})),__webpack_require__.d(__webpack_exports__,"SOURCE_META_DATA_REQUEST_ID",(function(){return SOURCE_META_DATA_REQUEST_ID})),__webpack_require__.d(__webpack_exports__,"SOURCE_FORMATTERS_DATA_REQUEST_ID",(function(){return SOURCE_FORMATTERS_DATA_REQUEST_ID})),__webpack_require__.d(__webpack_exports__,"SOURCE_BOUNDS_DATA_REQUEST_ID",(function(){return SOURCE_BOUNDS_DATA_REQUEST_ID})),__webpack_require__.d(__webpack_exports__,"MIN_ZOOM",(function(){return MIN_ZOOM})),__webpack_require__.d(__webpack_exports__,"MAX_ZOOM",(function(){return MAX_ZOOM})),__webpack_require__.d(__webpack_exports__,"DECIMAL_DEGREES_PRECISION",(function(){return DECIMAL_DEGREES_PRECISION})),__webpack_require__.d(__webpack_exports__,"ZOOM_PRECISION",(function(){return ZOOM_PRECISION})),__webpack_require__.d(__webpack_exports__,"DEFAULT_MAX_RESULT_WINDOW",(function(){return DEFAULT_MAX_RESULT_WINDOW})),__webpack_require__.d(__webpack_exports__,"DEFAULT_MAX_INNER_RESULT_WINDOW",(function(){return DEFAULT_MAX_INNER_RESULT_WINDOW})),__webpack_require__.d(__webpack_exports__,"DEFAULT_MAX_BUCKETS_LIMIT",(function(){return DEFAULT_MAX_BUCKETS_LIMIT})),__webpack_require__.d(__webpack_exports__,"FEATURE_ID_PROPERTY_NAME",(function(){return FEATURE_ID_PROPERTY_NAME})),__webpack_require__.d(__webpack_exports__,"FEATURE_VISIBLE_PROPERTY_NAME",(function(){return FEATURE_VISIBLE_PROPERTY_NAME})),__webpack_require__.d(__webpack_exports__,"MB_SOURCE_ID_LAYER_ID_PREFIX_DELIMITER",(function(){return MB_SOURCE_ID_LAYER_ID_PREFIX_DELIMITER})),__webpack_require__.d(__webpack_exports__,"ES_GEO_FIELD_TYPE",(function(){return ES_GEO_FIELD_TYPE})),__webpack_require__.d(__webpack_exports__,"ES_GEO_FIELD_TYPES",(function(){return ES_GEO_FIELD_TYPES})),__webpack_require__.d(__webpack_exports__,"ES_SPATIAL_RELATIONS",(function(){return ES_SPATIAL_RELATIONS})),__webpack_require__.d(__webpack_exports__,"GEO_JSON_TYPE",(function(){return GEO_JSON_TYPE})),__webpack_require__.d(__webpack_exports__,"POLYGON_COORDINATES_EXTERIOR_INDEX",(function(){return POLYGON_COORDINATES_EXTERIOR_INDEX})),__webpack_require__.d(__webpack_exports__,"LON_INDEX",(function(){return LON_INDEX})),__webpack_require__.d(__webpack_exports__,"LAT_INDEX",(function(){return LAT_INDEX})),__webpack_require__.d(__webpack_exports__,"EMPTY_FEATURE_COLLECTION",(function(){return EMPTY_FEATURE_COLLECTION})),__webpack_require__.d(__webpack_exports__,"DRAW_TYPE",(function(){return DRAW_TYPE})),__webpack_require__.d(__webpack_exports__,"AGG_DELIMITER",(function(){return AGG_DELIMITER})),__webpack_require__.d(__webpack_exports__,"AGG_TYPE",(function(){return AGG_TYPE})),__webpack_require__.d(__webpack_exports__,"RENDER_AS",(function(){return RENDER_AS})),__webpack_require__.d(__webpack_exports__,"GRID_RESOLUTION",(function(){return GRID_RESOLUTION})),__webpack_require__.d(__webpack_exports__,"SUPER_FINE_ZOOM_DELTA",(function(){return SUPER_FINE_ZOOM_DELTA})),__webpack_require__.d(__webpack_exports__,"GEOTILE_GRID_AGG_NAME",(function(){return GEOTILE_GRID_AGG_NAME})),__webpack_require__.d(__webpack_exports__,"GEOCENTROID_AGG_NAME",(function(){return GEOCENTROID_AGG_NAME})),__webpack_require__.d(__webpack_exports__,"TOP_TERM_PERCENTAGE_SUFFIX",(function(){return TOP_TERM_PERCENTAGE_SUFFIX})),__webpack_require__.d(__webpack_exports__,"DEFAULT_PERCENTILE",(function(){return DEFAULT_PERCENTILE})),__webpack_require__.d(__webpack_exports__,"COUNT_PROP_LABEL",(function(){return COUNT_PROP_LABEL})),__webpack_require__.d(__webpack_exports__,"COUNT_PROP_NAME",(function(){return COUNT_PROP_NAME})),__webpack_require__.d(__webpack_exports__,"STYLE_TYPE",(function(){return STYLE_TYPE})),__webpack_require__.d(__webpack_exports__,"LAYER_STYLE_TYPE",(function(){return LAYER_STYLE_TYPE})),__webpack_require__.d(__webpack_exports__,"COLOR_MAP_TYPE",(function(){return COLOR_MAP_TYPE})),__webpack_require__.d(__webpack_exports__,"CATEGORICAL_DATA_TYPES",(function(){return CATEGORICAL_DATA_TYPES})),__webpack_require__.d(__webpack_exports__,"ORDINAL_DATA_TYPES",(function(){return ORDINAL_DATA_TYPES})),__webpack_require__.d(__webpack_exports__,"SYMBOLIZE_AS_TYPES",(function(){return SYMBOLIZE_AS_TYPES})),__webpack_require__.d(__webpack_exports__,"LABEL_BORDER_SIZES",(function(){return LABEL_BORDER_SIZES})),__webpack_require__.d(__webpack_exports__,"DEFAULT_ICON",(function(){return DEFAULT_ICON})),__webpack_require__.d(__webpack_exports__,"VECTOR_STYLES",(function(){return VECTOR_STYLES})),__webpack_require__.d(__webpack_exports__,"SCALING_TYPES",(function(){return SCALING_TYPES})),__webpack_require__.d(__webpack_exports__,"FORMAT_TYPE",(function(){return FORMAT_TYPE})),__webpack_require__.d(__webpack_exports__,"MVT_FIELD_TYPE",(function(){return MVT_FIELD_TYPE})),__webpack_require__.d(__webpack_exports__,"SPATIAL_FILTERS_LAYER_ID",(function(){return SPATIAL_FILTERS_LAYER_ID})),__webpack_require__.d(__webpack_exports__,"INITIAL_LOCATION",(function(){return INITIAL_LOCATION})),__webpack_require__.d(__webpack_exports__,"LAYER_WIZARD_CATEGORY",(function(){return LAYER_WIZARD_CATEGORY})),__webpack_require__.d(__webpack_exports__,"VECTOR_SHAPE_TYPE",(function(){return VECTOR_SHAPE_TYPE})),__webpack_require__.d(__webpack_exports__,"MB_LOOKUP_FUNCTION",(function(){return MB_LOOKUP_FUNCTION})),__webpack_require__.d(__webpack_exports__,"DATA_MAPPING_FUNCTION",(function(){return DATA_MAPPING_FUNCTION})),__webpack_require__.d(__webpack_exports__,"DEFAULT_PERCENTILES",(function(){return DEFAULT_PERCENTILES})),__webpack_require__.d(__webpack_exports__,"INDEX_META_DATA_CREATED_BY",(function(){return INDEX_META_DATA_CREATED_BY})),__webpack_require__.d(__webpack_exports__,"MAX_DRAWING_SIZE_BYTES",(function(){return MAX_DRAWING_SIZE_BYTES})),__webpack_require__.d(__webpack_exports__,"emsWorldLayerId",(function(){return emsWorldLayerId})),__webpack_require__.d(__webpack_exports__,"emsRegionLayerId",(function(){return emsRegionLayerId})),__webpack_require__.d(__webpack_exports__,"emsUsaZipLayerId",(function(){return emsUsaZipLayerId}));var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1);const EMS_APP_NAME="kibana",EMS_CATALOGUE_PATH="ems/catalogue",EMS_FILES_CATALOGUE_PATH="ems/files",EMS_FILES_API_PATH="ems/files",EMS_FILES_DEFAULT_JSON_PATH="file",EMS_GLYPHS_PATH="fonts",EMS_SPRITES_PATH="sprites",EMS_TILES_CATALOGUE_PATH="ems/tiles",EMS_TILES_API_PATH="ems/tiles",EMS_TILES_RASTER_STYLE_PATH="raster/style",EMS_TILES_RASTER_TILE_PATH="raster/tile",EMS_TILES_VECTOR_STYLE_PATH="vector/style",EMS_TILES_VECTOR_SOURCE_PATH="vector/source",EMS_TILES_VECTOR_TILE_PATH="vector/tile",MAP_SAVED_OBJECT_TYPE="map",APP_ID="maps",APP_ICON="gisApp",APP_ICON_SOLUTION="logoKibana",APP_NAME=_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.visTypeAlias.title",{defaultMessage:"Maps"}),INITIAL_LAYERS_KEY="initialLayers",MAPS_APP_PATH="app/"+APP_ID,MAP_PATH="map",GIS_API_PATH="api/"+APP_ID,INDEX_SETTINGS_API_PATH=GIS_API_PATH+"/indexSettings",FONTS_API_PATH=GIS_API_PATH+"/fonts",INDEX_SOURCE_API_PATH=GIS_API_PATH+"/docSource",API_ROOT_PATH="/"+GIS_API_PATH,MVT_GETTILE_API_PATH="mvt/getTile",MVT_GETGRIDTILE_API_PATH="mvt/getGridTile",MVT_SOURCE_LAYER_NAME="source_layer",KBN_TOO_MANY_FEATURES_PROPERTY="__kbn_too_many_features__",KBN_TOO_MANY_FEATURES_IMAGE_ID="__kbn_too_many_features_image_id__",KBN_IS_CENTROID_FEATURE="__kbn_is_centroid_feature__",MVT_TOKEN_PARAM_NAME="token",MAP_BASE_URL=`/${MAPS_APP_PATH}/${MAP_PATH}`;function getNewMapPath(){return MAP_BASE_URL}function getExistingMapPath(id){return`${MAP_BASE_URL}/${id}`}function getEditPath(id){return`/${MAP_PATH}/${id}`}let LAYER_TYPE,SOURCE_TYPES,FIELD_ORIGIN;!function(LAYER_TYPE){LAYER_TYPE.TILE="TILE",LAYER_TYPE.VECTOR="VECTOR",LAYER_TYPE.VECTOR_TILE="VECTOR_TILE",LAYER_TYPE.HEATMAP="HEATMAP",LAYER_TYPE.BLENDED_VECTOR="BLENDED_VECTOR",LAYER_TYPE.TILED_VECTOR="TILED_VECTOR"}(LAYER_TYPE||(LAYER_TYPE={})),function(SOURCE_TYPES){SOURCE_TYPES.EMS_TMS="EMS_TMS",SOURCE_TYPES.EMS_FILE="EMS_FILE",SOURCE_TYPES.ES_GEO_GRID="ES_GEO_GRID",SOURCE_TYPES.ES_GEO_LINE="ES_GEO_LINE",SOURCE_TYPES.ES_SEARCH="ES_SEARCH",SOURCE_TYPES.ES_PEW_PEW="ES_PEW_PEW",SOURCE_TYPES.ES_TERM_SOURCE="ES_TERM_SOURCE",SOURCE_TYPES.EMS_XYZ="EMS_XYZ",SOURCE_TYPES.WMS="WMS",SOURCE_TYPES.KIBANA_TILEMAP="KIBANA_TILEMAP",SOURCE_TYPES.REGIONMAP_FILE="REGIONMAP_FILE",SOURCE_TYPES.GEOJSON_FILE="GEOJSON_FILE",SOURCE_TYPES.MVT_SINGLE_LAYER="MVT_SINGLE_LAYER",SOURCE_TYPES.TABLE_SOURCE="TABLE_SOURCE"}(SOURCE_TYPES||(SOURCE_TYPES={})),function(FIELD_ORIGIN){FIELD_ORIGIN.SOURCE="source",FIELD_ORIGIN.JOIN="join"}(FIELD_ORIGIN||(FIELD_ORIGIN={}));const JOIN_FIELD_NAME_PREFIX="__kbnjoin__",META_DATA_REQUEST_ID_SUFFIX="meta",FORMATTERS_DATA_REQUEST_ID_SUFFIX="formatters",SOURCE_DATA_REQUEST_ID="source",SOURCE_META_DATA_REQUEST_ID=`${SOURCE_DATA_REQUEST_ID}_${META_DATA_REQUEST_ID_SUFFIX}`,SOURCE_FORMATTERS_DATA_REQUEST_ID=`${SOURCE_DATA_REQUEST_ID}_${FORMATTERS_DATA_REQUEST_ID_SUFFIX}`,SOURCE_BOUNDS_DATA_REQUEST_ID=SOURCE_DATA_REQUEST_ID+"_bounds",MIN_ZOOM=0,MAX_ZOOM=24,DECIMAL_DEGREES_PRECISION=5,ZOOM_PRECISION=2,DEFAULT_MAX_RESULT_WINDOW=1e4,DEFAULT_MAX_INNER_RESULT_WINDOW=100,DEFAULT_MAX_BUCKETS_LIMIT=65535,FEATURE_ID_PROPERTY_NAME="__kbn__feature_id__",FEATURE_VISIBLE_PROPERTY_NAME="__kbn_isvisibleduetojoin__",MB_SOURCE_ID_LAYER_ID_PREFIX_DELIMITER="_";let ES_GEO_FIELD_TYPE;!function(ES_GEO_FIELD_TYPE){ES_GEO_FIELD_TYPE.GEO_POINT="geo_point",ES_GEO_FIELD_TYPE.GEO_SHAPE="geo_shape"}(ES_GEO_FIELD_TYPE||(ES_GEO_FIELD_TYPE={}));const ES_GEO_FIELD_TYPES=["geo_point","geo_shape"];let ES_SPATIAL_RELATIONS,GEO_JSON_TYPE;!function(ES_SPATIAL_RELATIONS){ES_SPATIAL_RELATIONS.INTERSECTS="INTERSECTS",ES_SPATIAL_RELATIONS.DISJOINT="DISJOINT",ES_SPATIAL_RELATIONS.WITHIN="WITHIN"}(ES_SPATIAL_RELATIONS||(ES_SPATIAL_RELATIONS={})),function(GEO_JSON_TYPE){GEO_JSON_TYPE.POINT="Point",GEO_JSON_TYPE.MULTI_POINT="MultiPoint",GEO_JSON_TYPE.LINE_STRING="LineString",GEO_JSON_TYPE.MULTI_LINE_STRING="MultiLineString",GEO_JSON_TYPE.POLYGON="Polygon",GEO_JSON_TYPE.MULTI_POLYGON="MultiPolygon",GEO_JSON_TYPE.GEOMETRY_COLLECTION="GeometryCollection"}(GEO_JSON_TYPE||(GEO_JSON_TYPE={}));const POLYGON_COORDINATES_EXTERIOR_INDEX=0,LON_INDEX=0,LAT_INDEX=1,EMPTY_FEATURE_COLLECTION={type:"FeatureCollection",features:[]};let DRAW_TYPE;!function(DRAW_TYPE){DRAW_TYPE.BOUNDS="BOUNDS",DRAW_TYPE.DISTANCE="DISTANCE",DRAW_TYPE.POLYGON="POLYGON"}(DRAW_TYPE||(DRAW_TYPE={}));const AGG_DELIMITER="_of_";let AGG_TYPE,RENDER_AS,GRID_RESOLUTION;!function(AGG_TYPE){AGG_TYPE.AVG="avg",AGG_TYPE.COUNT="count",AGG_TYPE.MAX="max",AGG_TYPE.MIN="min",AGG_TYPE.SUM="sum",AGG_TYPE.TERMS="terms",AGG_TYPE.PERCENTILE="percentile",AGG_TYPE.UNIQUE_COUNT="cardinality"}(AGG_TYPE||(AGG_TYPE={})),function(RENDER_AS){RENDER_AS.HEATMAP="heatmap",RENDER_AS.POINT="point",RENDER_AS.GRID="grid"}(RENDER_AS||(RENDER_AS={})),function(GRID_RESOLUTION){GRID_RESOLUTION.COARSE="COARSE",GRID_RESOLUTION.FINE="FINE",GRID_RESOLUTION.MOST_FINE="MOST_FINE",GRID_RESOLUTION.SUPER_FINE="SUPER_FINE"}(GRID_RESOLUTION||(GRID_RESOLUTION={}));const SUPER_FINE_ZOOM_DELTA=7,GEOTILE_GRID_AGG_NAME="gridSplit",GEOCENTROID_AGG_NAME="gridCentroid",TOP_TERM_PERCENTAGE_SUFFIX="__percentage",DEFAULT_PERCENTILE=50,COUNT_PROP_LABEL=_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.aggs.defaultCountLabel",{defaultMessage:"count"}),COUNT_PROP_NAME="doc_count";let STYLE_TYPE,LAYER_STYLE_TYPE,COLOR_MAP_TYPE;!function(STYLE_TYPE){STYLE_TYPE.STATIC="STATIC",STYLE_TYPE.DYNAMIC="DYNAMIC"}(STYLE_TYPE||(STYLE_TYPE={})),function(LAYER_STYLE_TYPE){LAYER_STYLE_TYPE.VECTOR="VECTOR",LAYER_STYLE_TYPE.HEATMAP="HEATMAP",LAYER_STYLE_TYPE.TILE="TILE"}(LAYER_STYLE_TYPE||(LAYER_STYLE_TYPE={})),function(COLOR_MAP_TYPE){COLOR_MAP_TYPE.CATEGORICAL="CATEGORICAL",COLOR_MAP_TYPE.ORDINAL="ORDINAL"}(COLOR_MAP_TYPE||(COLOR_MAP_TYPE={}));const CATEGORICAL_DATA_TYPES=["string","ip","boolean"],ORDINAL_DATA_TYPES=["number","date"];let SYMBOLIZE_AS_TYPES,LABEL_BORDER_SIZES;!function(SYMBOLIZE_AS_TYPES){SYMBOLIZE_AS_TYPES.CIRCLE="circle",SYMBOLIZE_AS_TYPES.ICON="icon"}(SYMBOLIZE_AS_TYPES||(SYMBOLIZE_AS_TYPES={})),function(LABEL_BORDER_SIZES){LABEL_BORDER_SIZES.NONE="NONE",LABEL_BORDER_SIZES.SMALL="SMALL",LABEL_BORDER_SIZES.MEDIUM="MEDIUM",LABEL_BORDER_SIZES.LARGE="LARGE"}(LABEL_BORDER_SIZES||(LABEL_BORDER_SIZES={}));const DEFAULT_ICON="marker";let VECTOR_STYLES,SCALING_TYPES,FORMAT_TYPE,MVT_FIELD_TYPE;!function(VECTOR_STYLES){VECTOR_STYLES.SYMBOLIZE_AS="symbolizeAs",VECTOR_STYLES.FILL_COLOR="fillColor",VECTOR_STYLES.LINE_COLOR="lineColor",VECTOR_STYLES.LINE_WIDTH="lineWidth",VECTOR_STYLES.ICON="icon",VECTOR_STYLES.ICON_SIZE="iconSize",VECTOR_STYLES.ICON_ORIENTATION="iconOrientation",VECTOR_STYLES.LABEL_TEXT="labelText",VECTOR_STYLES.LABEL_COLOR="labelColor",VECTOR_STYLES.LABEL_SIZE="labelSize",VECTOR_STYLES.LABEL_BORDER_COLOR="labelBorderColor",VECTOR_STYLES.LABEL_BORDER_SIZE="labelBorderSize"}(VECTOR_STYLES||(VECTOR_STYLES={})),function(SCALING_TYPES){SCALING_TYPES.LIMIT="LIMIT",SCALING_TYPES.CLUSTERS="CLUSTERS",SCALING_TYPES.TOP_HITS="TOP_HITS",SCALING_TYPES.MVT="MVT"}(SCALING_TYPES||(SCALING_TYPES={})),function(FORMAT_TYPE){FORMAT_TYPE.GEOJSON="geojson",FORMAT_TYPE.TOPOJSON="topojson"}(FORMAT_TYPE||(FORMAT_TYPE={})),function(MVT_FIELD_TYPE){MVT_FIELD_TYPE.STRING="String",MVT_FIELD_TYPE.NUMBER="Number"}(MVT_FIELD_TYPE||(MVT_FIELD_TYPE={}));const SPATIAL_FILTERS_LAYER_ID="SPATIAL_FILTERS_LAYER_ID";let INITIAL_LOCATION,LAYER_WIZARD_CATEGORY,VECTOR_SHAPE_TYPE,MB_LOOKUP_FUNCTION,DATA_MAPPING_FUNCTION;!function(INITIAL_LOCATION){INITIAL_LOCATION.LAST_SAVED_LOCATION="LAST_SAVED_LOCATION",INITIAL_LOCATION.FIXED_LOCATION="FIXED_LOCATION",INITIAL_LOCATION.BROWSER_LOCATION="BROWSER_LOCATION",INITIAL_LOCATION.AUTO_FIT_TO_BOUNDS="AUTO_FIT_TO_BOUNDS"}(INITIAL_LOCATION||(INITIAL_LOCATION={})),function(LAYER_WIZARD_CATEGORY){LAYER_WIZARD_CATEGORY.ELASTICSEARCH="ELASTICSEARCH",LAYER_WIZARD_CATEGORY.REFERENCE="REFERENCE",LAYER_WIZARD_CATEGORY.SOLUTIONS="SOLUTIONS"}(LAYER_WIZARD_CATEGORY||(LAYER_WIZARD_CATEGORY={})),function(VECTOR_SHAPE_TYPE){VECTOR_SHAPE_TYPE.POINT="POINT",VECTOR_SHAPE_TYPE.LINE="LINE",VECTOR_SHAPE_TYPE.POLYGON="POLYGON"}(VECTOR_SHAPE_TYPE||(VECTOR_SHAPE_TYPE={})),function(MB_LOOKUP_FUNCTION){MB_LOOKUP_FUNCTION.GET="get",MB_LOOKUP_FUNCTION.FEATURE_STATE="feature-state"}(MB_LOOKUP_FUNCTION||(MB_LOOKUP_FUNCTION={})),function(DATA_MAPPING_FUNCTION){DATA_MAPPING_FUNCTION.INTERPOLATE="INTERPOLATE",DATA_MAPPING_FUNCTION.PERCENTILES="PERCENTILES"}(DATA_MAPPING_FUNCTION||(DATA_MAPPING_FUNCTION={}));const DEFAULT_PERCENTILES=[50,75,90,95,99],INDEX_META_DATA_CREATED_BY="maps-drawing-data-ingest",MAX_DRAWING_SIZE_BYTES=10485760,emsWorldLayerId="world_countries",emsRegionLayerId="administrative_regions_lvl2",emsUsaZipLayerId="usa_zip_codes"},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18n},function(module,exports){module.exports=__kbnSharedDeps__.React},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEui},function(module,__webpack_exports__,__webpack_require__){"use strict";let kibanaVersion;__webpack_require__.d(__webpack_exports__,"Q",(function(){return setKibanaVersion})),__webpack_require__.d(__webpack_exports__,"u",(function(){return getKibanaVersion})),__webpack_require__.d(__webpack_exports__,"S",(function(){return setStartServices})),__webpack_require__.d(__webpack_exports__,"p",(function(){return getIndexPatternService})),__webpack_require__.d(__webpack_exports__,"a",(function(){return getAutocompleteService})),__webpack_require__.d(__webpack_exports__,"q",(function(){return getInspector})),__webpack_require__.d(__webpack_exports__,"m",(function(){return getFileUpload})),__webpack_require__.d(__webpack_exports__,"M",(function(){return getUiSettings})),__webpack_require__.d(__webpack_exports__,"s",(function(){return getIsDarkMode})),__webpack_require__.d(__webpack_exports__,"o",(function(){return getIndexPatternSelectComponent})),__webpack_require__.d(__webpack_exports__,"n",(function(){return getHttp})),__webpack_require__.d(__webpack_exports__,"J",(function(){return getTimeFilter})),__webpack_require__.d(__webpack_exports__,"K",(function(){return getToasts})),__webpack_require__.d(__webpack_exports__,"D",(function(){return getSavedObjectsClient})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getCoreChrome})),__webpack_require__.d(__webpack_exports__,"w",(function(){return getMapsCapabilities})),__webpack_require__.d(__webpack_exports__,"N",(function(){return getVisualizeCapabilities})),__webpack_require__.d(__webpack_exports__,"h",(function(){return getDocLinks})),__webpack_require__.d(__webpack_exports__,"f",(function(){return getCoreOverlays})),__webpack_require__.d(__webpack_exports__,"g",(function(){return getData})),__webpack_require__.d(__webpack_exports__,"C",(function(){return getSavedObjects})),__webpack_require__.d(__webpack_exports__,"L",(function(){return getUiActions})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getCore})),__webpack_require__.d(__webpack_exports__,"y",(function(){return getNavigation})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getCoreI18n})),__webpack_require__.d(__webpack_exports__,"F",(function(){return getSearchService})),__webpack_require__.d(__webpack_exports__,"j",(function(){return getEmbeddableService})),__webpack_require__.d(__webpack_exports__,"x",(function(){return getNavigateToApp})),__webpack_require__.d(__webpack_exports__,"E",(function(){return getSavedObjectsTagging})),__webpack_require__.d(__webpack_exports__,"z",(function(){return getPresentationUtilContext})),__webpack_require__.d(__webpack_exports__,"R",(function(){return setMapAppConfig})),__webpack_require__.d(__webpack_exports__,"v",(function(){return getMapAppConfig})),__webpack_require__.d(__webpack_exports__,"l",(function(){return getEnabled})),__webpack_require__.d(__webpack_exports__,"H",(function(){return getShowMapsInspectorAdapter})),__webpack_require__.d(__webpack_exports__,"A",(function(){return getPreserveDrawingBuffer})),__webpack_require__.d(__webpack_exports__,"P",(function(){return setKibanaCommonConfig})),__webpack_require__.d(__webpack_exports__,"t",(function(){return getKibanaCommonConfig})),__webpack_require__.d(__webpack_exports__,"O",(function(){return setEMSSettings})),__webpack_require__.d(__webpack_exports__,"i",(function(){return getEMSSettings})),__webpack_require__.d(__webpack_exports__,"k",(function(){return getEmsTileLayerId})),__webpack_require__.d(__webpack_exports__,"B",(function(){return getRegionmapLayers})),__webpack_require__.d(__webpack_exports__,"I",(function(){return getTilemap})),__webpack_require__.d(__webpack_exports__,"G",(function(){return getShareService})),__webpack_require__.d(__webpack_exports__,"r",(function(){return getIsAllowByValueEmbeddables})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getChartsPaletteServiceGetColor}));const setKibanaVersion=version=>kibanaVersion=version,getKibanaVersion=()=>kibanaVersion;let coreStart,pluginsStart;function setStartServices(core,plugins){coreStart=core,pluginsStart=plugins}const getIndexPatternService=()=>pluginsStart.data.indexPatterns,getAutocompleteService=()=>pluginsStart.data.autocomplete,getInspector=()=>pluginsStart.inspector,getFileUpload=()=>pluginsStart.fileUpload,getUiSettings=()=>coreStart.uiSettings,getIsDarkMode=()=>getUiSettings().get("theme:darkMode",!1),getIndexPatternSelectComponent=()=>pluginsStart.data.ui.IndexPatternSelect,getHttp=()=>coreStart.http,getTimeFilter=()=>pluginsStart.data.query.timefilter.timefilter,getToasts=()=>coreStart.notifications.toasts,getSavedObjectsClient=()=>coreStart.savedObjects.client,getCoreChrome=()=>coreStart.chrome,getMapsCapabilities=()=>coreStart.application.capabilities.maps,getVisualizeCapabilities=()=>coreStart.application.capabilities.visualize,getDocLinks=()=>coreStart.docLinks,getCoreOverlays=()=>coreStart.overlays,getData=()=>pluginsStart.data,getSavedObjects=()=>pluginsStart.savedObjects,getUiActions=()=>pluginsStart.uiActions,getCore=()=>coreStart,getNavigation=()=>pluginsStart.navigation,getCoreI18n=()=>coreStart.i18n,getSearchService=()=>pluginsStart.data.search,getEmbeddableService=()=>pluginsStart.embeddable,getNavigateToApp=()=>coreStart.application.navigateToApp,getSavedObjectsTagging=()=>pluginsStart.savedObjectsTagging,getPresentationUtilContext=()=>pluginsStart.presentationUtil.ContextProvider;let mapAppConfig;const setMapAppConfig=config=>mapAppConfig=config,getMapAppConfig=()=>mapAppConfig,getEnabled=()=>getMapAppConfig().enabled,getShowMapsInspectorAdapter=()=>getMapAppConfig().showMapsInspectorAdapter,getPreserveDrawingBuffer=()=>getMapAppConfig().preserveDrawingBuffer;let kibanaCommonConfig;const setKibanaCommonConfig=config=>kibanaCommonConfig=config,getKibanaCommonConfig=()=>kibanaCommonConfig;let emsSettings;const setEMSSettings=value=>{emsSettings=value},getEMSSettings=()=>emsSettings,getEmsTileLayerId=()=>getKibanaCommonConfig().emsTileLayerId,getRegionmapLayers=()=>{const config=getKibanaCommonConfig();return config.regionmap&&config.regionmap.layers?config.regionmap.layers:[]},getTilemap=()=>{const config=getKibanaCommonConfig();return config.tilemap?config.tilemap:{}},getShareService=()=>pluginsStart.share,getIsAllowByValueEmbeddables=()=>pluginsStart.dashboard.dashboardFeatureFlagConfig.allowByValueEmbeddables;async function getChartsPaletteServiceGetColor(){const paletteRegistry=pluginsStart.charts?await pluginsStart.charts.palettes.getPalettes():null;if(!paletteRegistry)return null;const paletteDefinition=paletteRegistry.get("default"),chartConfiguration={syncColors:!0};return value=>{const series=[{name:value,rankAtDepth:0,totalSeriesAtDepth:1}],color=paletteDefinition.getColor(series,chartConfiguration);return color||"#3d3d3d"}}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return getAppTitle})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getMapEmbeddableDisplayName})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getDataSourceLabel})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getUrlLabel})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getEsSpatialRelationLabel}));var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(1),_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);function getAppTitle(){return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.appTitle",{defaultMessage:"Maps"})}function getMapEmbeddableDisplayName(){return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.embeddableDisplayName",{defaultMessage:"map"})}function getDataSourceLabel(){return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.source.dataSourceLabel",{defaultMessage:"Data source"})}function getUrlLabel(){return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.source.urlLabel",{defaultMessage:"Url"})}function getEsSpatialRelationLabel(spatialRelation){switch(spatialRelation){case _constants__WEBPACK_IMPORTED_MODULE_1__.ES_SPATIAL_RELATIONS.INTERSECTS:return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.common.esSpatialRelation.intersectsLabel",{defaultMessage:"intersects"});case _constants__WEBPACK_IMPORTED_MODULE_1__.ES_SPATIAL_RELATIONS.DISJOINT:return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.common.esSpatialRelation.disjointLabel",{defaultMessage:"disjoint"});case _constants__WEBPACK_IMPORTED_MODULE_1__.ES_SPATIAL_RELATIONS.WITHIN:return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.common.esSpatialRelation.withinLabel",{defaultMessage:"within"});case _constants__WEBPACK_IMPORTED_MODULE_1__.ES_SPATIAL_RELATIONS.CONTAINS:return _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.maps.common.esSpatialRelation.containsLabel",{defaultMessage:"contains"});default:return spatialRelation}}},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/uiActions/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/mapsEms/common");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.KbnI18nReact},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LICENSED_FEATURES})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getLicenseId})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getIsGoldPlus})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getIsEnterprisePlus})),__webpack_require__.d(__webpack_exports__,"h",(function(){return whenLicenseInitialized})),__webpack_require__.d(__webpack_exports__,"g",(function(){return setLicensingPluginStart})),__webpack_require__.d(__webpack_exports__,"f",(function(){return registerLicensedFeatures})),__webpack_require__.d(__webpack_exports__,"e",(function(){return notifyLicensedFeatureUsage}));var _common_constants__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);let LICENSED_FEATURES;!function(LICENSED_FEATURES){LICENSED_FEATURES.GEO_LINE_AGG="GEO_LINE_AGG",LICENSED_FEATURES.GEO_SHAPE_AGGS_GEO_TILE="GEO_SHAPE_AGGS_GEO_TILE",LICENSED_FEATURES.ON_PREM_EMS="ON_PREM_EMS"}(LICENSED_FEATURES||(LICENSED_FEATURES={}));const LICENCED_FEATURES_DETAILS={[LICENSED_FEATURES.GEO_LINE_AGG]:{name:"geo_line aggregation",license:"gold"},[LICENSED_FEATURES.GEO_SHAPE_AGGS_GEO_TILE]:{name:"geo_tile aggregation on geo_shape field-type",license:"gold"},[LICENSED_FEATURES.ON_PREM_EMS]:{name:"layer from local Elastic Maps Server",license:"enterprise"}};let licenseId,isGoldPlus=!1,isEnterprisePlus=!1;const getLicenseId=()=>licenseId,getIsGoldPlus=()=>isGoldPlus,getIsEnterprisePlus=()=>isEnterprisePlus;let licensingPluginStart,initializeLicense;const licenseInitialized=new Promise(resolve=>{initializeLicense=resolve}),whenLicenseInitialized=async()=>{await licenseInitialized};async function setLicensingPluginStart(licensingPlugin){updateLicenseState(await licensingPlugin.refresh()),licensingPluginStart=licensingPlugin,licensingPluginStart.license$.subscribe(updateLicenseState),initializeLicense(void 0)}function updateLicenseState(license){const gold=license.check(_common_constants__WEBPACK_IMPORTED_MODULE_0__.APP_ID,"gold");isGoldPlus="valid"===gold.state;const enterprise=license.check(_common_constants__WEBPACK_IMPORTED_MODULE_0__.APP_ID,"enterprise");isEnterprisePlus="valid"===enterprise.state,licenseId=license.uid}function registerLicensedFeatures(licensingPlugin){for(const licensedFeature of Object.values(LICENSED_FEATURES))licensingPlugin.featureUsage.register(LICENCED_FEATURES_DETAILS[licensedFeature].name,LICENCED_FEATURES_DETAILS[licensedFeature].license)}function notifyLicensedFeatureUsage(licensedFeature){licensingPluginStart?licensingPluginStart.featureUsage.notifyUsage(LICENCED_FEATURES_DETAILS[LICENSED_FEATURES[licensedFeature]].name):console.error("May not call notifyLicensedFeatureUsage before plugin start")}},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/data/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports,__webpack_require__){var rng=__webpack_require__(18),bytesToUuid=__webpack_require__(19);module.exports=function(options,buf,offset){var i=buf&&offset||0;"string"==typeof options&&(buf="binary"===options?new Array(16):null,options=null);var rnds=(options=options||{}).random||(options.rng||rng)();if(rnds[6]=15&rnds[6]|64,rnds[8]=63&rnds[8]|128,buf)for(var ii=0;ii<16;++ii)buf[i+ii]=rnds[ii];return buf||bytesToUuid(rnds)}},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.RisonNode},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("entry/core/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){"use strict";function extractReferences({attributes:attributes,references:references=[]}){if(!attributes.layerListJSON)return{attributes:attributes,references:references};const extractedReferences=[],layerList=JSON.parse(attributes.layerListJSON);return layerList.forEach((layer,layerIndex)=>{if(layer.sourceDescriptor&&"indexPatternId"in layer.sourceDescriptor){const sourceDescriptor=layer.sourceDescriptor,refName=`layer_${layerIndex}_source_index_pattern`;extractedReferences.push({name:refName,type:"index-pattern",id:sourceDescriptor.indexPatternId}),delete sourceDescriptor.indexPatternId,sourceDescriptor.indexPatternRefName=refName}(layer.joins?layer.joins:[]).forEach((join,joinIndex)=>{if("indexPatternId"in join.right){const sourceDescriptor=join.right,refName=`layer_${layerIndex}_join_${joinIndex}_index_pattern`;extractedReferences.push({name:refName,type:"index-pattern",id:sourceDescriptor.indexPatternId}),delete sourceDescriptor.indexPatternId,sourceDescriptor.indexPatternRefName=refName}})}),{attributes:{...attributes,layerListJSON:JSON.stringify(layerList)},references:references.concat(extractedReferences)}}function findReference(targetName,references){const reference=references.find(({name:name})=>name===targetName);if(!reference)throw new Error(`Could not find reference "${targetName}"`);return reference}function injectReferences({attributes:attributes,references:references}){if(!attributes.layerListJSON)return{attributes:attributes};const layerList=JSON.parse(attributes.layerListJSON);return layerList.forEach(layer=>{if(layer.sourceDescriptor&&"indexPatternRefName"in layer.sourceDescriptor){const sourceDescriptor=layer.sourceDescriptor,reference=findReference(sourceDescriptor.indexPatternRefName,references);sourceDescriptor.indexPatternId=reference.id,delete sourceDescriptor.indexPatternRefName}(layer.joins?layer.joins:[]).forEach(join=>{if("indexPatternRefName"in join.right){const sourceDescriptor=join.right,reference=findReference(sourceDescriptor.indexPatternRefName,references);sourceDescriptor.indexPatternId=reference.id,delete sourceDescriptor.indexPatternRefName}})}),{attributes:{...attributes,layerListJSON:JSON.stringify(layerList)}}}__webpack_require__.d(__webpack_exports__,"a",(function(){return extractReferences})),__webpack_require__.d(__webpack_exports__,"b",(function(){return injectReferences}))},function(module,exports){},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/home/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){var getRandomValues="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(getRandomValues){var rnds8=new Uint8Array(16);module.exports=function(){return getRandomValues(rnds8),rnds8}}else{var rnds=new Array(16);module.exports=function(){for(var r,i=0;i<16;i++)0==(3&i)&&(r=4294967296*Math.random()),rnds[i]=r>>>((3&i)<<3)&255;return rnds}}},function(module,exports){for(var byteToHex=[],i=0;i<256;++i)byteToHex[i]=(i+256).toString(16).substr(1);module.exports=function(buf,offset){var i=offset||0,bth=byteToHex;return[bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],"-",bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]],bth[buf[i++]]].join("")}},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(21);__kbnBundles__.define("plugin/maps/public",__webpack_require__,22),__kbnBundles__.define("plugin/maps/common/constants",__webpack_require__,0)},function(module,exports,__webpack_require__){__webpack_require__.p=window.__kbnPublicPath__.maps},function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"plugin",(function(){return public_plugin})),__webpack_require__.d(__webpack_exports__,"MAP_SAVED_OBJECT_TYPE",(function(){return constants.MAP_SAVED_OBJECT_TYPE})),__webpack_require__.d(__webpack_exports__,"MapsStartApi",(function(){return start_api.MapsStartApi}));var public_=__webpack_require__(14),external_kbnSharedDeps_React_=__webpack_require__(2),external_kbnSharedDeps_React_default=__webpack_require__.n(external_kbnSharedDeps_React_),external_kbnSharedDeps_ElasticEui_=__webpack_require__(3),external_kbnSharedDeps_KbnI18n_=__webpack_require__(1),external_kbnSharedDeps_KbnI18nReact_=__webpack_require__(8);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class map_details_MapDetails extends external_kbnSharedDeps_React_.Component{constructor(...args){super(...args),_defineProperty(this,"tabs",[{id:"details",name:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.inspector.mapDetailsTitle",{defaultMessage:"Map details"}),dataTestSubj:"mapDetailsTab"},{id:"mapStyle",name:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.inspector.mapboxStyleTitle",{defaultMessage:"Mapbox style"}),dataTestSubj:"mapboxStyleTab"}]),_defineProperty(this,"state",{selectedTabId:"details"}),_defineProperty(this,"onSelectedTabChanged",id=>{this.setState({selectedTabId:id})}),_defineProperty(this,"renderTab",()=>"mapStyle"===this.state.selectedTabId?external_kbnSharedDeps_React_default.a.createElement("div",{"data-test-subj":"mapboxStyleContainer"},external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiCodeBlock,{language:"json",paddingSize:"s"},JSON.stringify(this.props.mapStyle,null,2))):external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTable,{style:{tableLayout:"auto"}},external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableBody,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRow,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRowCell,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_KbnI18nReact_.FormattedMessage,{id:"xpack.maps.inspector.centerLonLabel",defaultMessage:"Center lon"})),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRowCell,{"data-test-subj":"centerLon"},this.props.centerLon)),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRow,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRowCell,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_KbnI18nReact_.FormattedMessage,{id:"xpack.maps.inspector.centerLatLabel",defaultMessage:"Center lat"})),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRowCell,{"data-test-subj":"centerLat"},this.props.centerLat)),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRow,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRowCell,null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_KbnI18nReact_.FormattedMessage,{id:"xpack.maps.inspector.zoomLabel",defaultMessage:"Zoom"})),external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTableRowCell,{"data-test-subj":"zoom"},this.props.zoom)))))}renderTabs(){return this.tabs.map((tab,index)=>external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTab,{onClick:()=>this.onSelectedTabChanged(tab.id),isSelected:tab.id===this.state.selectedTabId,key:index,"data-test-subj":tab.dataTestSubj},tab.name))}render(){return external_kbnSharedDeps_React_default.a.createElement("div",null,external_kbnSharedDeps_React_default.a.createElement(external_kbnSharedDeps_ElasticEui_.EuiTabs,{size:"s"},this.renderTabs()),this.renderTab())}}class map_view_MapViewComponent extends external_kbnSharedDeps_React_.Component{constructor(props){var obj,key,value;super(props),value=()=>{const{stats:stats,style:style}=this.props.adapters.map.getMapState();this.setState({stats:stats,mapStyle:style})},(key="_onMapChange")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,props.adapters.map.on("change",this._onMapChange);const{stats:_stats,style:_style}=props.adapters.map.getMapState();this.state={stats:_stats,mapStyle:_style}}componentWillUnmount(){this.props.adapters.map.removeListener("change",this._onMapChange)}render(){return external_kbnSharedDeps_React_default.a.createElement(map_details_MapDetails,{centerLon:this.state.stats.center[0],centerLat:this.state.stats.center[1],zoom:this.state.stats.zoom,mapStyle:this.state.mapStyle})}}const MapView={title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.inspector.mapDetailsViewTitle",{defaultMessage:"Map details"}),order:30,help:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.inspector.mapDetailsViewHelpText",{defaultMessage:"View the map state"}),shouldShow:adapters=>Boolean(adapters.map),component:map_view_MapViewComponent};var kibana_services=__webpack_require__(4),constants=__webpack_require__(0),i18n_getters=__webpack_require__(5),home_public_=__webpack_require__(17);const featureCatalogueEntry={id:constants.APP_ID,title:Object(i18n_getters.a)(),subtitle:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.featureCatalogue.mapsSubtitle",{defaultMessage:"Plot geographic data."}),description:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.feature.appDescription",{defaultMessage:"Explore geospatial data from Elasticsearch and the Elastic Maps Service."}),icon:constants.APP_ICON,path:"/app/maps",showOnHomePage:!1,category:home_public_.FeatureCatalogueCategory.DATA,solutionId:"kibana",order:400};var uiActions_public_=__webpack_require__(6),external_kbnSharedDeps_RisonNode_=__webpack_require__(13),external_kbnSharedDeps_RisonNode_default=__webpack_require__.n(external_kbnSharedDeps_RisonNode_),data_public_=__webpack_require__(10),kibanaUtils_public_=__webpack_require__(12);let loadModulesPromise;async function lazyLoadMapModules(){return void 0!==loadModulesPromise||(loadModulesPromise=new Promise(async resolve=>{const{MapEmbeddable:MapEmbeddable,getIndexPatternService:getIndexPatternService,getMapsCapabilities:getMapsCapabilities,renderApp:renderApp,createSecurityLayerDescriptors:createSecurityLayerDescriptors,registerLayerWizard:registerLayerWizard,registerSource:registerSource,createTileMapLayerDescriptor:createTileMapLayerDescriptor,createRegionMapLayerDescriptor:createRegionMapLayerDescriptor,createBasemapLayerDescriptor:createBasemapLayerDescriptor,createESSearchSourceLayerDescriptor:createESSearchSourceLayerDescriptor,suggestEMSTermJoinConfig:suggestEMSTermJoinConfig}=await __webpack_require__.e(1).then(__webpack_require__.bind(null,398));resolve({MapEmbeddable:MapEmbeddable,getIndexPatternService:getIndexPatternService,getMapsCapabilities:getMapsCapabilities,renderApp:renderApp,createSecurityLayerDescriptors:createSecurityLayerDescriptors,registerLayerWizard:registerLayerWizard,registerSource:registerSource,createTileMapLayerDescriptor:createTileMapLayerDescriptor,createRegionMapLayerDescriptor:createRegionMapLayerDescriptor,createBasemapLayerDescriptor:createBasemapLayerDescriptor,createESSearchSourceLayerDescriptor:createESSearchSourceLayerDescriptor,suggestEMSTermJoinConfig:suggestEMSTermJoinConfig})})),loadModulesPromise}async function createMapUrl({getStartServices:getStartServices,mapId:mapId,filters:filters,query:query,refreshInterval:refreshInterval,timeRange:timeRange,initialLayers:initialLayers,hash:hash}){const startServices=await getStartServices(),useHash=null!=hash?hash:startServices.useHashedUrl,appBasePath=startServices.appBasePath,appState={},queryState={};query&&(appState.query=query),filters&&filters.length&&(appState.filters=null==filters?void 0:filters.filter(f=>!data_public_.esFilters.isFilterPinned(f))),timeRange&&(queryState.time=timeRange),filters&&filters.length&&(queryState.filters=null==filters?void 0:filters.filter(f=>data_public_.esFilters.isFilterPinned(f))),refreshInterval&&(queryState.refreshInterval=refreshInterval);let url=`${appBasePath}/map#/${mapId||""}`;if(url=Object(kibanaUtils_public_.setStateToKbnUrl)("_g",queryState,{useHash:useHash},url),url=Object(kibanaUtils_public_.setStateToKbnUrl)("_a",appState,{useHash:useHash},url),initialLayers&&initialLayers.length){const risonEncodedInitialLayers=external_kbnSharedDeps_RisonNode_default.a.encode_array(initialLayers);url=`${url}&${constants.INITIAL_LAYERS_KEY}=${encodeURIComponent(risonEncodedInitialLayers)}`}return url}var v4=__webpack_require__(11),v4_default=__webpack_require__.n(v4);const visualizeGeoFieldAction=Object(uiActions_public_.createAction)({id:uiActions_public_.ACTION_VISUALIZE_GEO_FIELD,type:uiActions_public_.ACTION_VISUALIZE_GEO_FIELD,getDisplayName:()=>external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.discover.visualizeFieldLabel",{defaultMessage:"Visualize in Maps"}),isCompatible:async()=>!!Object(kibana_services.N)().show,getHref:async context=>await getMapsLink(context),execute:async context=>{const hash=(await getMapsLink(context)).split("#")[1];Object(kibana_services.x)()(constants.APP_ID,{path:`${constants.MAP_PATH}/#${hash}`})}}),getMapsLink=async context=>{var _context$contextualFi;const indexPattern=await Object(kibana_services.p)().get(context.indexPatternId),field=indexPattern.fields.find(fld=>fld.name===context.fieldName),supportsClustering=null==field?void 0:field.aggregatable,hasTooltips=(null==context||null===(_context$contextualFi=context.contextualFields)||void 0===_context$contextualFi?void 0:_context$contextualFi.length)&&"_source"!==(null==context?void 0:context.contextualFields[0]),initialLayers=[{id:v4_default()(),visible:!0,type:supportsClustering?constants.LAYER_TYPE.BLENDED_VECTOR:constants.LAYER_TYPE.VECTOR,sourceDescriptor:{id:v4_default()(),type:constants.SOURCE_TYPES.ES_SEARCH,tooltipProperties:hasTooltips?context.contextualFields:[],label:indexPattern.title,indexPatternId:context.indexPatternId,geoField:context.fieldName,scalingType:supportsClustering?constants.SCALING_TYPES.CLUSTERS:constants.SCALING_TYPES.LIMIT}}],generator=Object(kibana_services.G)().urlGenerators.getUrlGenerator("MAPS_APP_URL_GENERATOR"),urlState={filters:Object(kibana_services.g)().query.filterManager.getFilters(),query:Object(kibana_services.g)().query.queryString.getQuery(),initialLayers:initialLayers,timeRange:Object(kibana_services.g)().query.timefilter.timefilter.getTime()};return generator.createUrl(urlState)};var migrations_references=__webpack_require__(15);function map_embeddable_factory_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class map_embeddable_factory_MapEmbeddableFactory{constructor(){map_embeddable_factory_defineProperty(this,"type",constants.MAP_SAVED_OBJECT_TYPE),map_embeddable_factory_defineProperty(this,"savedObjectMetaData",{name:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.mapSavedObjectLabel",{defaultMessage:"Map"}),type:constants.MAP_SAVED_OBJECT_TYPE,getIconForSavedObject:()=>constants.APP_ICON}),map_embeddable_factory_defineProperty(this,"createFromSavedObject",async(savedObjectId,input,parent)=>(input.savedObjectId||(input.savedObjectId=savedObjectId),this.create(input,parent))),map_embeddable_factory_defineProperty(this,"create",async(input,parent)=>{const{MapEmbeddable:MapEmbeddable}=await lazyLoadMapModules();return new MapEmbeddable({editable:await this.isEditable()},input,parent)})}async isEditable(){const{getMapsCapabilities:getMapsCapabilities}=await lazyLoadMapModules();return getMapsCapabilities().save}canCreateNew(){return!1}getDisplayName(){return Object(i18n_getters.d)()}extract(state){const maybeMapByValueInput=state;if(void 0!==maybeMapByValueInput.attributes){const{references:references}=Object(migrations_references.a)({attributes:maybeMapByValueInput.attributes});return{state:state,references:references}}return{state:state,references:[]}}}var start_api=__webpack_require__(16);const createLayerDescriptors={createSecurityLayerDescriptors:async(indexPatternId,indexPatternTitle)=>(await lazyLoadMapModules()).createSecurityLayerDescriptors(indexPatternId,indexPatternTitle),createBasemapLayerDescriptor:async()=>(await lazyLoadMapModules()).createBasemapLayerDescriptor(),createESSearchSourceLayerDescriptor:async params=>(await lazyLoadMapModules()).createESSearchSourceLayerDescriptor(params)};async function registerLayerWizard(layerWizard){return(await lazyLoadMapModules()).registerLayerWizard(layerWizard)}async function registerSource(entry){return(await lazyLoadMapModules()).registerSource(entry)}async function suggestEMSTermJoinConfig(sampleValuesConfig){const mapModules=await lazyLoadMapModules();return await mapModules.suggestEMSTermJoinConfig(sampleValuesConfig)}var licensed_features=__webpack_require__(9),common_=__webpack_require__(7);function ems_settings_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}class ems_settings_EMSSettings{constructor(config,getIsEnterPrisePlus){ems_settings_defineProperty(this,"_config",void 0),ems_settings_defineProperty(this,"_getIsEnterprisePlus",void 0),this._config=config,this._getIsEnterprisePlus=getIsEnterPrisePlus}isEMSUrlSet(){return!!this._config.emsUrl}getEMSRoot(){return this._config.emsUrl.replace(/\/$/,"")}isIncludeElasticMapsService(){return!!this._config.includeElasticMapsService}hasOnPremLicense(){return this._getIsEnterprisePlus()}isEMSEnabled(){return this.isEMSUrlSet()?this._getIsEnterprisePlus():this.isIncludeElasticMapsService()}getEMSFileApiUrl(){return this._config.emsFileApiUrl===common_.DEFAULT_EMS_FILE_API_URL&&this.isEMSUrlSet()?this.getEMSRoot()+"/file":this._config.emsFileApiUrl}isProxyElasticMapsServiceInMaps(){return!!this._config.proxyElasticMapsServiceInMaps}getEMSTileApiUrl(){return this._config.emsTileApiUrl===common_.DEFAULT_EMS_TILE_API_URL&&this.isEMSUrlSet()?this.getEMSRoot()+"/tile":this._config.emsTileApiUrl}getEMSLandingPageUrl(){return this._config.emsLandingPageUrl===common_.DEFAULT_EMS_LANDING_PAGE_URL&&this.isEMSUrlSet()?this.getEMSRoot()+"/maps":this._config.emsLandingPageUrl}getEMSFontLibraryUrl(){return this._config.emsFontLibraryUrl===common_.DEFAULT_EMS_FONT_LIBRARY_URL&&this.isEMSUrlSet()?this.getEMSRoot()+"/tile/fonts/{fontstack}/{range}.pbf":this._config.emsFontLibraryUrl}}class plugin_MapsPlugin{constructor(initializerContext){var obj,key,value;value=void 0,(key="_initializerContext")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,this._initializerContext=initializerContext}setup(core,plugins){Object(licensed_features.f)(plugins.licensing);const config=this._initializerContext.config.get();Object(kibana_services.P)(plugins.mapsEms.config),Object(kibana_services.R)(config),Object(kibana_services.Q)(this._initializerContext.env.packageInfo.version);const emsSettings=new ems_settings_EMSSettings(plugins.mapsEms.config,licensed_features.b);Object(kibana_services.O)(emsSettings);const getStartServices=async()=>{const[coreStart]=await core.getStartServices();return{appBasePath:coreStart.application.getUrlForApp("maps"),useHashedUrl:coreStart.uiSettings.get("state:storeInSessionStorage")}};plugins.share.urlGenerators.registerUrlGenerator((getStartServices=>({id:"MAPS_APP_URL_GENERATOR",createUrl:async mapsUrlGeneratorState=>createMapUrl({...mapsUrlGeneratorState,getStartServices:getStartServices})}))(getStartServices)),plugins.share.urlGenerators.registerUrlGenerator((getStartServices=>({id:"MAPS_APP_TILE_MAP_URL_GENERATOR",createUrl:async({label:label,mapType:mapType,colorSchema:colorSchema,indexPatternId:indexPatternId,geoFieldName:geoFieldName,metricAgg:metricAgg,metricFieldName:metricFieldName,filters:filters,query:query,timeRange:timeRange,hash:hash})=>{const initialLayers=[],tileMapLayerDescriptor=(await lazyLoadMapModules()).createTileMapLayerDescriptor({label:label,mapType:mapType,colorSchema:colorSchema,indexPatternId:indexPatternId,geoFieldName:geoFieldName,metricAgg:metricAgg,metricFieldName:metricFieldName});return tileMapLayerDescriptor&&initialLayers.push(tileMapLayerDescriptor),createMapUrl({initialLayers:initialLayers,filters:filters,query:query,timeRange:timeRange,hash:!0,getStartServices:getStartServices})}}))(getStartServices)),plugins.share.urlGenerators.registerUrlGenerator((getStartServices=>({id:"MAPS_APP_REGION_MAP_URL_GENERATOR",createUrl:async({label:label,emsLayerId:emsLayerId,leftFieldName:leftFieldName,termsFieldName:termsFieldName,termsSize:termsSize,colorSchema:colorSchema,indexPatternId:indexPatternId,indexPatternTitle:indexPatternTitle,metricAgg:metricAgg,metricFieldName:metricFieldName,filters:filters,query:query,timeRange:timeRange,hash:hash})=>{const initialLayers=[],regionMapLayerDescriptor=(await lazyLoadMapModules()).createRegionMapLayerDescriptor({label:label,emsLayerId:emsLayerId,leftFieldName:leftFieldName,termsFieldName:termsFieldName,termsSize:termsSize,colorSchema:colorSchema,indexPatternId:indexPatternId,indexPatternTitle:indexPatternTitle,metricAgg:metricAgg,metricFieldName:metricFieldName});return regionMapLayerDescriptor&&initialLayers.push(regionMapLayerDescriptor),createMapUrl({initialLayers:initialLayers,filters:filters,query:query,timeRange:timeRange,hash:!0,getStartServices:getStartServices})}}))(getStartServices)),plugins.inspector.registerView(MapView),plugins.home&&plugins.home.featureCatalogue.register(featureCatalogueEntry),plugins.visualizations.registerAlias(function(visualizations,showMapVisualizationTypes){showMapVisualizationTypes||visualizations.hideTypes(["region_map","tile_map"]);const appDescription=external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.maps.visTypeAlias.description",{defaultMessage:"Create and style maps with multiple layers and indices."});return{aliasApp:constants.APP_ID,aliasPath:"/"+constants.MAP_PATH,name:constants.APP_ID,title:constants.APP_NAME,description:appDescription,icon:constants.APP_ICON,stage:"production",appExtensions:{visualizations:{docTypes:[constants.MAP_SAVED_OBJECT_TYPE],searchFields:["title^3"],toListItem(savedObject){const{id:id,type:type,attributes:attributes}=savedObject,{title:title,description:description}=attributes;return{id:id,title:title,description:description,editUrl:Object(constants.getEditPath)(id),editApp:constants.APP_ID,icon:constants.APP_ICON,stage:"production",savedObjectType:type,typeTitle:constants.APP_NAME}}}}}}(plugins.visualizations,config.showMapVisualizationTypes)),plugins.embeddable.registerEmbeddableFactory(constants.MAP_SAVED_OBJECT_TYPE,new map_embeddable_factory_MapEmbeddableFactory),core.application.register({id:constants.APP_ID,title:Object(i18n_getters.a)(),order:4e3,icon:`plugins/${constants.APP_ID}/icon.svg`,euiIconType:constants.APP_ICON_SOLUTION,category:public_.DEFAULT_APP_CATEGORIES.kibana,async mount(params){const{renderApp:renderApp}=await lazyLoadMapModules();return renderApp(params)}})}start(core,plugins){return Object(licensed_features.g)(plugins.licensing),Object(kibana_services.S)(core,plugins),core.application.capabilities.maps.show&&plugins.uiActions.addTriggerAction(uiActions_public_.VISUALIZE_GEO_FIELD_TRIGGER,visualizeGeoFieldAction),core.application.capabilities.maps.save||plugins.visualizations.unRegisterAlias(constants.APP_ID),{createLayerDescriptors:createLayerDescriptors,registerLayerWizard:registerLayerWizard,registerSource:registerSource,suggestEMSTermJoinConfig:suggestEMSTermJoinConfig}}}const public_plugin=initContext=>new plugin_MapsPlugin(initContext)},function(module,exports){module.exports=__kbnSharedDeps__.Lodash},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/kibanaReact/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ReactDom},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/data/common");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/savedObjects/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ReactRouterDom},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/embeddable/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.ElasticEuiLibServices},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/inspector/common/adapters/request");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))},function(module,exports){module.exports=__kbnSharedDeps__.Theme},function(module,exports){module.exports=__kbnSharedDeps__.Rxjs},function(module,exports){module.exports=__kbnSharedDeps__.RxjsOperators},function(module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__);var ns=__kbnBundles__.get("plugin/presentationUtil/public");Object.defineProperties(__webpack_exports__,Object.getOwnPropertyDescriptors(ns))}]);