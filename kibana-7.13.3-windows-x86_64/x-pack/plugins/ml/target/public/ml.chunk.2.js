/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[2],{128:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"mlResultsService",(function(){return mlResultsService})),__webpack_require__.d(__webpack_exports__,"mlResultsServiceProvider",(function(){return mlResultsServiceProvider}));var external_kbnSharedDeps_RxjsOperators_=__webpack_require__(25),external_kbnSharedDeps_Lodash_=__webpack_require__(7),job_utils=__webpack_require__(69),validation_utils=__webpack_require__(133),datafeed_utils=__webpack_require__(234),anomaly_utils=__webpack_require__(6),aggregation_types=__webpack_require__(81),object_utils=__webpack_require__(4),common=__webpack_require__(16);function resultsServiceRxProvider(mlApiServices){return{getMetricData(index,entityFields,query,metricFunction,metricFieldName,summaryCountFieldName,timeFieldName,earliestMs,latestMs,intervalMs,datafeedConfig){const scriptFields=null==datafeedConfig?void 0:datafeedConfig.script_fields,aggFields=Object(datafeed_utils.b)(datafeedConfig),shouldCriteria=[],mustCriteria=[{range:{[timeFieldName]:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},...query?[query]:[]];entityFields.forEach(entity=>{0!==entity.fieldValue.length?mustCriteria.push({term:{[entity.fieldName]:entity.fieldValue}}):(shouldCriteria.push({bool:{must:[{term:{[entity.fieldName]:""}}]}}),shouldCriteria.push({bool:{must_not:[{exists:{field:entity.fieldName}}]}}))});const body={query:{bool:{must:mustCriteria}},size:0,_source:!1,aggs:{byTime:{date_histogram:{field:timeFieldName,fixed_interval:intervalMs+"ms",min_doc_count:0}}},...Object(common.isRuntimeMappings)(null==datafeedConfig?void 0:datafeedConfig.runtime_mappings)?{runtime_mappings:null==datafeedConfig?void 0:datafeedConfig.runtime_mappings}:{}};if(shouldCriteria.length>0&&(body.query.bool.should=shouldCriteria,body.query.bool.minimum_should_match=shouldCriteria.length/2),body.aggs.byTime.aggs={},void 0!==metricFieldName&&""!==metricFieldName&&metricFunction){const metricAgg={[metricFunction]:{}};if(void 0!==scriptFields&&void 0!==scriptFields[metricFieldName]?metricAgg[metricFunction].script=scriptFields[metricFieldName].script:metricAgg[metricFunction].field=metricFieldName,"percentiles"===metricFunction&&(metricAgg[metricFunction].percents=[job_utils.b]),Object(object_utils.b)(aggFields)){var _aggFields$accessor$a;const accessor=Object.keys(aggFields)[0],tempAggs={...null!==(_aggFields$accessor$a=aggFields[accessor].aggs)&&void 0!==_aggFields$accessor$a?_aggFields$accessor$a:aggFields[accessor].aggregations},foundValue=Object(validation_utils.a)(tempAggs,metricFieldName);void 0!==foundValue&&(tempAggs.metric=foundValue,delete tempAggs[metricFieldName]),body.aggs.byTime.aggs=tempAggs}else body.aggs.byTime.aggs.metric=metricAgg}else if(void 0!==summaryCountFieldName&&metricFunction===aggregation_types.a.CARDINALITY&&"object"==typeof aggFields&&Object.keys(aggFields).length>0){var _aggFields$accessor$a2;const accessor=Object.keys(aggFields)[0],tempAggs={...null!==(_aggFields$accessor$a2=aggFields[accessor].aggs)&&void 0!==_aggFields$accessor$a2?_aggFields$accessor$a2:aggFields[accessor].aggregations},foundCardinalityField=Object(validation_utils.a)(tempAggs,summaryCountFieldName);void 0!==foundCardinalityField&&(tempAggs.metric=foundCardinalityField),body.aggs.byTime.aggs=tempAggs}return mlApiServices.esSearch$({index:index,body:body}).pipe(Object(external_kbnSharedDeps_RxjsOperators_.map)(resp=>{var _resp$aggregations$by,_resp$aggregations,_resp$aggregations$by2;const obj={success:!0,results:{}};return(null!==(_resp$aggregations$by=null==resp||null===(_resp$aggregations=resp.aggregations)||void 0===_resp$aggregations||null===(_resp$aggregations$by2=_resp$aggregations.byTime)||void 0===_resp$aggregations$by2?void 0:_resp$aggregations$by2.buckets)&&void 0!==_resp$aggregations$by?_resp$aggregations$by:[]).forEach(dataForTime=>{if("count"===metricFunction)obj.results[dataForTime.key]=dataForTime.doc_count;else{var _dataForTime$metric,_dataForTime$metric2;const value=null==dataForTime||null===(_dataForTime$metric=dataForTime.metric)||void 0===_dataForTime$metric?void 0:_dataForTime$metric.value,values=null==dataForTime||null===(_dataForTime$metric2=dataForTime.metric)||void 0===_dataForTime$metric2?void 0:_dataForTime$metric2.values;if(0===dataForTime.doc_count)obj.results[dataForTime.key]=null;else if(void 0!==value)obj.results[dataForTime.key]=value;else if(void 0!==values){const medianValues=values[job_utils.b];obj.results[dataForTime.key]=isNaN(medianValues)?null:medianValues}else obj.results[dataForTime.key]=null}}),obj}))},getModelPlotOutput(jobId,detectorIndex,criteriaFields,earliestMs,latestMs,intervalMs,aggType){const obj={success:!0,results:{}},modelAggs=void 0===aggType?{max:"max",min:"min"}:{max:aggType.max,min:aggType.min},mustCriteria=[{term:{job_id:jobId}},{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}}];Object(external_kbnSharedDeps_Lodash_.each)(criteriaFields,criteria=>{mustCriteria.push({term:{[criteria.fieldName]:criteria.fieldValue}})});const shouldCriteria=[{term:{detector_index:detectorIndex}},{bool:{must_not:[{exists:{field:"detector_index"}}]}}];return mlApiServices.results.anomalySearch$({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:model_plot",analyze_wildcard:!0}},{bool:{must:mustCriteria,should:shouldCriteria,minimum_should_match:1}}]}},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:intervalMs+"ms",min_doc_count:0},aggs:{actual:{avg:{field:"actual"}},modelUpper:{[modelAggs.max]:{field:"model_upper"}},modelLower:{[modelAggs.min]:{field:"model_lower"}}}}}}},[jobId]).pipe(Object(external_kbnSharedDeps_RxjsOperators_.map)(resp=>{const aggregationsByTime=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","times","buckets"],[]);return Object(external_kbnSharedDeps_Lodash_.each)(aggregationsByTime,dataForTime=>{const time=dataForTime.key,modelUpper=Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["modelUpper","value"]),modelLower=Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["modelLower","value"]),actual=Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["actual","value"]);obj.results[time]={actual:actual,modelUpper:void 0===modelUpper||!1===isFinite(modelUpper)?null:modelUpper,modelLower:void 0===modelLower||!1===isFinite(modelLower)?null:modelLower}}),obj}))},getRecordsForCriteria(jobIds,criteriaFields,threshold,earliestMs,latestMs,maxResults,functionDescription){const obj={success:!0,records:[]},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{range:{record_score:{gte:threshold}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:",jobIdFilterStr+=jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}if(Object(external_kbnSharedDeps_Lodash_.each)(criteriaFields,criteria=>{boolCriteria.push({term:{[criteria.fieldName]:criteria.fieldValue}})}),void 0!==functionDescription){const mlFunctionToPlotIfMetric=void 0!==functionDescription?anomaly_utils.c.toML(functionDescription):functionDescription;boolCriteria.push({term:{function_description:mlFunctionToPlotIfMetric}})}return mlApiServices.results.anomalySearch$({size:void 0!==maxResults?maxResults:100,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},sort:[{record_score:{order:"desc"}}]}},jobIds).pipe(Object(external_kbnSharedDeps_RxjsOperators_.map)(resp=>(resp.hits.total.value>0&&Object(external_kbnSharedDeps_Lodash_.each)(resp.hits.hits,hit=>{obj.records.push(hit._source)}),obj)))},getScheduledEventsByBucket(jobIds,earliestMs,latestMs,intervalMs,maxJobs,maxEvents){const obj={success:!0,events:{}},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{exists:{field:"scheduled_events"}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{jobIdFilterStr+=`${i>0?" OR ":""}job_id:${jobId}`}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}return mlApiServices.results.anomalySearch$({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:bucket",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},aggs:{jobs:{terms:{field:"job_id",min_doc_count:1,size:maxJobs},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:intervalMs+"ms",min_doc_count:1},aggs:{events:{terms:{field:"scheduled_events",size:maxEvents}}}}}}}}},jobIds).pipe(Object(external_kbnSharedDeps_RxjsOperators_.map)(resp=>{const dataByJobId=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","jobs","buckets"],[]);return Object(external_kbnSharedDeps_Lodash_.each)(dataByJobId,dataForJob=>{const jobId=dataForJob.key,resultsForTime={},dataByTime=Object(external_kbnSharedDeps_Lodash_.get)(dataForJob,["times","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(dataByTime,dataForTime=>{const time=dataForTime.key,events=Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["events","buckets"]);resultsForTime[time]=events.map(e=>e.key)}),obj.events[jobId]=resultsForTime}),obj}))},fetchPartitionFieldsValues:(jobId,searchTerm,criteriaFields,earliestMs,latestMs)=>mlApiServices.results.fetchPartitionFieldsValues(jobId,searchTerm,criteriaFields,earliestMs,latestMs),getRecordsForInfluencer$(jobIds,influencers,threshold,earliestMs,latestMs,maxResults,influencersFilterQuery){const obj={success:!0,records:[]},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{range:{record_score:{gte:threshold}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:",jobIdFilterStr+=jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}return void 0!==influencersFilterQuery&&boolCriteria.push(influencersFilterQuery),influencers.length>0&&boolCriteria.push({bool:{should:influencers.map(influencer=>({nested:{path:"influencers",query:{bool:{must:[{match:{"influencers.influencer_field_name":influencer.fieldName}},{match:{"influencers.influencer_field_values":influencer.fieldValue}}]}}}})),minimum_should_match:1}}),mlApiServices.results.anomalySearch$({size:void 0!==maxResults?maxResults:100,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},sort:[{record_score:{order:"desc"}}]}},jobIds).pipe(Object(external_kbnSharedDeps_RxjsOperators_.map)(resp=>(resp.hits.total.value>0&&Object(external_kbnSharedDeps_Lodash_.each)(resp.hits.hits,hit=>{obj.records.push(hit._source)}),obj)))}}}var string_utils=__webpack_require__(89),explorer_constants=__webpack_require__(75);function resultsServiceProvider(mlApiServices){return{getScoresByBucket:(jobIds,earliestMs,latestMs,intervalMs,perPage=10,fromPage=1)=>new Promise((resolve,reject)=>{var _jobIds$length;const obj={success:!0,results:{}},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:",jobIdFilterStr+=jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}mlApiServices.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:bucket",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},aggs:{jobsCardinality:{cardinality:{field:"job_id"}},jobId:{terms:{field:"job_id",size:null!==(_jobIds$length=null==jobIds?void 0:jobIds.length)&&void 0!==_jobIds$length?_jobIds$length:1,order:{anomalyScore:"desc"}},aggs:{anomalyScore:{max:{field:"anomaly_score"}},bucketTruncate:{bucket_sort:{from:(fromPage-1)*perPage,size:0===perPage?1:perPage}},byTime:{date_histogram:{field:"timestamp",fixed_interval:intervalMs+"ms",min_doc_count:1,extended_bounds:{min:earliestMs,max:latestMs}},aggs:{anomalyScore:{max:{field:"anomaly_score"}}}}}}}}},jobIds).then(resp=>{var _resp$aggregations$jo,_resp$aggregations,_resp$aggregations$jo2;const dataByJobId=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","jobId","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(dataByJobId,dataForJob=>{const jobId=dataForJob.key,resultsForTime={},dataByTime=Object(external_kbnSharedDeps_Lodash_.get)(dataForJob,["byTime","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(dataByTime,dataForTime=>{if(void 0!==Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["anomalyScore","value"])){const time=dataForTime.key;resultsForTime[time]=Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["anomalyScore","value"])}}),obj.results[jobId]=resultsForTime}),obj.cardinality=null!==(_resp$aggregations$jo=null===(_resp$aggregations=resp.aggregations)||void 0===_resp$aggregations||null===(_resp$aggregations$jo2=_resp$aggregations.jobsCardinality)||void 0===_resp$aggregations$jo2?void 0:_resp$aggregations$jo2.value)&&void 0!==_resp$aggregations$jo?_resp$aggregations$jo:0,resolve(obj)}).catch(resp=>{reject(resp)})}),getTopInfluencers:(jobIds,earliestMs,latestMs,maxFieldValues=explorer_constants.a,perPage=10,fromPage=1,influencers=[],influencersFilterQuery)=>new Promise((resolve,reject)=>{const obj={success:!0,influencers:{}},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{range:{influencer_score:{gt:0}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:",jobIdFilterStr+=jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}void 0!==influencersFilterQuery&&boolCriteria.push(influencersFilterQuery),influencers.length>0&&boolCriteria.push({bool:{should:influencers.map(influencer=>({bool:{must:[{term:{influencer_field_name:influencer.fieldName}},{term:{influencer_field_value:influencer.fieldValue}}]}})),minimum_should_match:1}}),mlApiServices.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:influencer",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},aggs:{influencerFieldNames:{terms:{field:"influencer_field_name",size:5,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},influencerFieldValues:{terms:{field:"influencer_field_value",size:maxFieldValues||explorer_constants.a,order:{maxAnomalyScore:"desc"}},aggs:{bucketTruncate:{bucket_sort:{from:(fromPage-1)*perPage,size:perPage}},maxAnomalyScore:{max:{field:"influencer_score"}},sumAnomalyScore:{sum:{field:"influencer_score"}}}}}}}}},jobIds).then(resp=>{const fieldNameBuckets=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","influencerFieldNames","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(fieldNameBuckets,nameBucket=>{const fieldName=nameBucket.key,fieldValues=[],fieldValueBuckets=Object(external_kbnSharedDeps_Lodash_.get)(nameBucket,["influencerFieldValues","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(fieldValueBuckets,valueBucket=>{const fieldValueResult={influencerFieldValue:valueBucket.key,maxAnomalyScore:valueBucket.maxAnomalyScore.value,sumAnomalyScore:valueBucket.sumAnomalyScore.value};fieldValues.push(fieldValueResult)}),obj.influencers[fieldName]=fieldValues}),resolve(obj)}).catch(resp=>{reject(resp)})}),getTopInfluencerValues:(jobIds,influencerFieldName,earliestMs,latestMs,maxResults)=>new Promise((resolve,reject)=>{const obj={success:!0,results:[]},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:",jobIdFilterStr+=jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}mlApiServices.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:influencer AND influencer_field_name: "+Object(string_utils.c)(influencerFieldName),analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},aggs:{influencerFieldValues:{terms:{field:"influencer_field_value",size:maxResults||2,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},sumAnomalyScore:{sum:{field:"influencer_score"}}}}}}},jobIds).then(resp=>{const buckets=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","influencerFieldValues","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(buckets,bucket=>{const result={influencerFieldValue:bucket.key,maxAnomalyScore:bucket.maxAnomalyScore.value,sumAnomalyScore:bucket.sumAnomalyScore.value};obj.results.push(result)}),resolve(obj)}).catch(resp=>{reject(resp)})}),getOverallBucketScores:(jobIds,topN,earliestMs,latestMs,interval)=>new Promise((resolve,reject)=>{const obj={success:!0,results:{}};mlApiServices.overallBuckets({jobId:jobIds,topN:topN,bucketSpan:interval,start:earliestMs,end:latestMs}).then(resp=>{const dataByTime=Object(external_kbnSharedDeps_Lodash_.get)(resp,["overall_buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(dataByTime,dataForTime=>{const value=Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["overall_score"]);void 0!==value&&(obj.results[dataForTime.timestamp]=value)}),resolve(obj)}).catch(resp=>{reject(resp)})}),getInfluencerValueMaxScoreByTime:(jobIds,influencerFieldName,influencerFieldValues,earliestMs,latestMs,intervalMs,maxResults=explorer_constants.a,perPage=explorer_constants.i,fromPage=1,influencersFilterQuery)=>new Promise((resolve,reject)=>{const obj={success:!0,results:{}},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{range:{influencer_score:{gt:0}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:"+jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}if(void 0!==influencersFilterQuery&&boolCriteria.push(influencersFilterQuery),influencerFieldValues&&influencerFieldValues.length>0){let influencerFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(influencerFieldValues,(value,i)=>{i>0&&(influencerFilterStr+=" OR "),value.trim().length>0?influencerFilterStr+="influencer_field_value:"+Object(string_utils.c)(value):influencerFilterStr+=`influencer_field_value:"${value}"`}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:influencerFilterStr}})}mlApiServices.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:influencer AND influencer_field_name: "+Object(string_utils.c)(influencerFieldName),analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},aggs:{influencerValuesCardinality:{cardinality:{field:"influencer_field_value"}},influencerFieldValues:{terms:{field:"influencer_field_value",size:maxResults||explorer_constants.a,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},bucketTruncate:{bucket_sort:{from:(fromPage-1)*perPage,size:perPage}},byTime:{date_histogram:{field:"timestamp",fixed_interval:intervalMs+"ms",min_doc_count:1},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}}}}}}}}},jobIds).then(resp=>{var _resp$aggregations$in,_resp$aggregations2,_resp$aggregations2$i;const fieldValueBuckets=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","influencerFieldValues","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(fieldValueBuckets,valueBucket=>{const fieldValue=valueBucket.key,fieldValues={},timeBuckets=Object(external_kbnSharedDeps_Lodash_.get)(valueBucket,["byTime","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(timeBuckets,timeBucket=>{const time=timeBucket.key,score=timeBucket.maxAnomalyScore.value;fieldValues[time]=score}),obj.results[fieldValue]=fieldValues}),obj.cardinality=null!==(_resp$aggregations$in=null===(_resp$aggregations2=resp.aggregations)||void 0===_resp$aggregations2||null===(_resp$aggregations2$i=_resp$aggregations2.influencerValuesCardinality)||void 0===_resp$aggregations2$i?void 0:_resp$aggregations2$i.value)&&void 0!==_resp$aggregations$in?_resp$aggregations$in:0,resolve(obj)}).catch(resp=>{reject(resp)})}),getRecordInfluencers:(jobIds,threshold,earliestMs,latestMs,maxResults)=>new Promise((resolve,reject)=>{const obj={success:!0,records:[]},boolCriteria=[{nested:{path:"influencers",query:{bool:{must:[{exists:{field:"influencers"}}]}}}},{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{range:{record_score:{gte:threshold}}}];if(jobIds&&jobIds.length>0&&(1!==jobIds.length||"*"!==jobIds[0])){let jobIdFilterStr="";Object(external_kbnSharedDeps_Lodash_.each)(jobIds,(jobId,i)=>{i>0&&(jobIdFilterStr+=" OR "),jobIdFilterStr+="job_id:",jobIdFilterStr+=jobId}),boolCriteria.push({query_string:{analyze_wildcard:!1,query:jobIdFilterStr}})}mlApiServices.results.anomalySearch({size:void 0!==maxResults?maxResults:100,body:{_source:["job_id","detector_index","influencers","record_score"],query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},sort:[{record_score:{order:"desc"}}]}},jobIds).then(resp=>{resp.hits.total.value>0&&Object(external_kbnSharedDeps_Lodash_.each)(resp.hits.hits,hit=>{obj.records.push(hit._source)}),resolve(obj)}).catch(resp=>{reject(resp)})}),getRecordsForDetector:(jobId,detectorIndex,checkForInfluencers,influencerFieldName,influencerFieldValue,threshold,earliestMs,latestMs,maxResults)=>new Promise((resolve,reject)=>{const obj={success:!0,records:[]},boolCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{term:{job_id:jobId}},{term:{detector_index:detectorIndex}},{range:{record_score:{gte:threshold}}}];influencerFieldName&&influencerFieldValue?boolCriteria.push({nested:{path:"influencers",query:{bool:{must:[{match:{"influencers.influencer_field_name":influencerFieldName}},{match:{"influencers.influencer_field_values":influencerFieldValue}}]}}}}):!0===checkForInfluencers&&boolCriteria.push({nested:{path:"influencers",query:{bool:{must:[{exists:{field:"influencers"}}]}}}}),mlApiServices.results.anomalySearch({size:void 0!==maxResults?maxResults:100,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:boolCriteria}}]}},sort:[{record_score:{order:"desc"}}]}},[jobId]).then(resp=>{resp.hits.total.value>0&&Object(external_kbnSharedDeps_Lodash_.each)(resp.hits.hits,hit=>{obj.records.push(hit._source)}),resolve(obj)}).catch(resp=>{reject(resp)})}),getEventRateData:(index,query,timeFieldName,earliestMs,latestMs,intervalMs,runtimeMappings,indicesOptions)=>new Promise((resolve,reject)=>{const obj={success:!0,results:{}},mustCriteria=[{range:{[timeFieldName]:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}}];query&&mustCriteria.push(query),mlApiServices.esSearch({index:index,size:0,body:{query:{bool:{must:mustCriteria}},_source:{excludes:[]},aggs:{eventRate:{date_histogram:{field:timeFieldName,fixed_interval:intervalMs+"ms",min_doc_count:0,extended_bounds:{min:earliestMs,max:latestMs}}}},...Object(object_utils.b)(runtimeMappings)&&query?{runtime_mappings:runtimeMappings}:{}},...null!=indicesOptions?indicesOptions:{}}).then(resp=>{const dataByTimeBucket=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","eventRate","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(dataByTimeBucket,dataForTime=>{const time=dataForTime.key;obj.results[time]=dataForTime.doc_count}),obj.total=resp.hits.total.value,resolve(obj)}).catch(resp=>{reject(resp)})}),getEventDistributionData:(index,splitField,filterField=null,query,metricFunction,metricFieldName,timeFieldName,earliestMs,latestMs,intervalMs)=>new Promise((resolve,reject)=>{if(void 0===splitField)return resolve([]);const mustCriteria=[];mustCriteria.push({range:{[timeFieldName]:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}}),query&&mustCriteria.push(query),null!==filterField&&mustCriteria.push({term:{[filterField.fieldName]:filterField.fieldValue}});const body={query:{function_score:{query:{bool:{must:mustCriteria}},functions:[{random_score:{seed:10,field:"_seq_no"}}]}},size:0,_source:{excludes:[]},aggs:{sample:{sampler:{shard_size:2e4},aggs:{byTime:{date_histogram:{field:timeFieldName,fixed_interval:intervalMs+"ms",min_doc_count:1},aggs:{entities:{terms:{field:splitField.fieldName,size:10,min_doc_count:1}}}}}}}};if(void 0!==metricFieldName&&""!==metricFieldName&&"string"==typeof metricFunction){body.aggs.sample.aggs.byTime.aggs.entities.aggs={};const metricAgg={[metricFunction]:{field:metricFieldName}};"percentiles"===metricFunction&&(metricAgg[metricFunction].percents=[job_utils.b]),"cardinality"===metricFunction&&(metricAgg[metricFunction].precision_threshold=100),body.aggs.sample.aggs.byTime.aggs.entities.aggs.metric=metricAgg}mlApiServices.esSearch({index:index,body:body,track_total_hits:!0}).then(resp=>{const totalHits=resp.hits.total.value,successfulShards=Object(external_kbnSharedDeps_Lodash_.get)(resp,["_shards","successful"],0);let normalizeFactor=1;totalHits>2e4*successfulShards&&(normalizeFactor=totalHits/(2e4*successfulShards));const data=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","sample","byTime","buckets"],[]).reduce((d,dataForTime)=>{const date=+dataForTime.key;return Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["entities","buckets"],[]).forEach(entity=>{let value="count"===metricFunction?entity.doc_count:entity.metric.value;"count"!==metricFunction&&"cardinality"!==metricFunction&&"sum"!==metricFunction||(value*=normalizeFactor),d.push({date:date,entity:entity.key,value:value})}),d},[]);resolve(data)}).catch(resp=>{reject(resp)})}),getRecordMaxScoreByTime:(jobId,criteriaFields,earliestMs,latestMs,intervalMs,actualPlotFunctionIfMetric)=>new Promise((resolve,reject)=>{const obj={success:!0,results:{}},mustCriteria=[{range:{timestamp:{gte:earliestMs,lte:latestMs,format:"epoch_millis"}}},{term:{job_id:jobId}}];if(Object(external_kbnSharedDeps_Lodash_.each)(criteriaFields,criteria=>{mustCriteria.push({term:{[criteria.fieldName]:criteria.fieldValue}})}),void 0!==actualPlotFunctionIfMetric){const mlFunctionToPlotIfMetric=void 0!==actualPlotFunctionIfMetric?anomaly_utils.c.toML(actualPlotFunctionIfMetric):actualPlotFunctionIfMetric;mustCriteria.push({term:{function_description:mlFunctionToPlotIfMetric}})}mlApiServices.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!0}},{bool:{must:mustCriteria}}]}},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:intervalMs+"ms",min_doc_count:1},aggs:{recordScore:{max:{field:"record_score"}}}}}}},[jobId]).then(resp=>{const aggregationsByTime=Object(external_kbnSharedDeps_Lodash_.get)(resp,["aggregations","times","buckets"],[]);Object(external_kbnSharedDeps_Lodash_.each)(aggregationsByTime,dataForTime=>{const time=dataForTime.key;obj.results[time]={score:Object(external_kbnSharedDeps_Lodash_.get)(dataForTime,["recordScore","value"])}}),resolve(obj)}).catch(resp=>{reject(resp)})})}}const mlResultsService=mlResultsServiceProvider(__webpack_require__(64).ml);function mlResultsServiceProvider(mlApiServices){return{...resultsServiceProvider(mlApiServices),...resultsServiceRxProvider(mlApiServices)}}}}]);