/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[22],{883:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"registerEmbeddables",(function(){return embeddables.e})),__webpack_require__.d(__webpack_exports__,"registerManagementSection",(function(){return management.a})),__webpack_require__.d(__webpack_exports__,"registerMlUiActions",(function(){return ui_actions.b})),__webpack_require__.d(__webpack_exports__,"registerSearchLinks",(function(){return registerSearchLinks})),__webpack_require__.d(__webpack_exports__,"registerMlAlerts",(function(){return registerMlAlerts}));var embeddables=__webpack_require__(103),management=__webpack_require__(34),ui_actions=__webpack_require__(181),external_kbnSharedDeps_KbnI18n_=__webpack_require__(2),ml_url_generator=__webpack_require__(0);const OVERVIEW_LINK_SEARCH_DEEP_LINK={id:"mlOverviewSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.overview",{defaultMessage:"Overview"}),path:"/"+ml_url_generator.b.OVERVIEW},ANOMALY_DETECTION_SEARCH_DEEP_LINK={id:"mlAnomalyDetectionSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.anomalyDetection",{defaultMessage:"Anomaly Detection"}),path:"/"+ml_url_generator.b.ANOMALY_DETECTION_JOBS_MANAGE},DATA_FRAME_ANALYTICS_SEARCH_DEEP_LINK={id:"mlDataFrameAnalyticsSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.dataFrameAnalytics",{defaultMessage:"Data Frame Analytics"}),path:"/"+ml_url_generator.b.DATA_FRAME_ANALYTICS_JOBS_MANAGE,searchDeepLinks:[{id:"mlTrainedModelsSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.trainedModels",{defaultMessage:"Trained Models"}),path:"/"+ml_url_generator.b.DATA_FRAME_ANALYTICS_MODELS_MANAGE}]},DATA_VISUALIZER_SEARCH_DEEP_LINK={id:"mlDataVisualizerSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.dataVisualizer",{defaultMessage:"Data Visualizer"}),path:"/"+ml_url_generator.b.DATA_VISUALIZER},FILE_UPLOAD_SEARCH_DEEP_LINK={id:"mlFileUploadSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.fileUpload",{defaultMessage:"File Upload"}),path:"/"+ml_url_generator.b.DATA_VISUALIZER_FILE},INDEX_DATA_VISUALIZER_SEARCH_DEEP_LINK={id:"mlIndexDataVisualizerSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.indexDataVisualizer",{defaultMessage:"Index Data Visualizer"}),path:"/"+ml_url_generator.b.DATA_VISUALIZER_INDEX_SELECT},SETTINGS_SEARCH_DEEP_LINK={id:"mlSettingsSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.settings",{defaultMessage:"Settings"}),path:"/"+ml_url_generator.b.SETTINGS,searchDeepLinks:[{id:"mlCalendarSettingsSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.calendarSettings",{defaultMessage:"Calendars"}),path:"/"+ml_url_generator.b.CALENDARS_MANAGE},{id:"mlFilterListsSettingsSearchDeepLink",title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.searchDeepLink.filterListsSettings",{defaultMessage:"Filter Lists"}),path:"/"+ml_url_generator.b.SETTINGS}]};function getSearchDeepLinks(isFullLicense){const deepLinks=[DATA_VISUALIZER_SEARCH_DEEP_LINK,FILE_UPLOAD_SEARCH_DEEP_LINK,INDEX_DATA_VISUALIZER_SEARCH_DEEP_LINK];return!0===isFullLicense&&deepLinks.push(OVERVIEW_LINK_SEARCH_DEEP_LINK,ANOMALY_DETECTION_SEARCH_DEEP_LINK,DATA_FRAME_ANALYTICS_SEARCH_DEEP_LINK,SETTINGS_SEARCH_DEEP_LINK),deepLinks}function registerSearchLinks(appUpdater,isFullLicense){appUpdater.next(()=>({meta:{keywords:[external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.keyword.ml",{defaultMessage:"ML"})],searchDeepLinks:getSearchDeepLinks(isFullLicense)}}))}var external_kbnSharedDeps_React_=__webpack_require__(14),alerts=__webpack_require__(146),app=__webpack_require__(5),anomaly_detection_urls_generator=__webpack_require__(10),validators=__webpack_require__(17);const validateLookbackInterval=Object(validators.g)(),validateTopNBucket=Object(validators.d)({min:1});function registerMlAlerts(triggersActionsUi,alerting){triggersActionsUi.alertTypeRegistry.register({id:alerts.b.ANOMALY_DETECTION,description:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.description",{defaultMessage:"Alert when anomaly detection jobs results match the condition."}),iconClass:"bell",documentationUrl:docLinks=>`${docLinks.ELASTIC_WEBSITE_URL}guide/en/machine-learning/${docLinks.DOC_LINK_VERSION}/ml-configuring-alerts.html`,alertParamsExpression:Object(external_kbnSharedDeps_React_.lazy)(()=>Promise.all([__webpack_require__.e(0),__webpack_require__.e(13)]).then(__webpack_require__.bind(null,881))),validate:alertParams=>{var _alertParams$jobSelec,_alertParams$jobSelec2,_alertParams$jobSelec3,_alertParams$jobSelec4,_alertParams$jobSelec5,_alertParams$jobSelec6,_alertParams$jobSelec7,_alertParams$jobSelec8;const validationResult={errors:{jobSelection:new Array,severity:new Array,resultType:new Array,topNBuckets:new Array,lookbackInterval:new Array}};return null!==(_alertParams$jobSelec=alertParams.jobSelection)&&void 0!==_alertParams$jobSelec&&null!==(_alertParams$jobSelec2=_alertParams$jobSelec.jobIds)&&void 0!==_alertParams$jobSelec2&&_alertParams$jobSelec2.length||null!==(_alertParams$jobSelec3=alertParams.jobSelection)&&void 0!==_alertParams$jobSelec3&&null!==(_alertParams$jobSelec4=_alertParams$jobSelec3.groupIds)&&void 0!==_alertParams$jobSelec4&&_alertParams$jobSelec4.length||validationResult.errors.jobSelection.push(external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.jobSelection.errorMessage",{defaultMessage:"Job selection is required"})),(Array.isArray(null===(_alertParams$jobSelec5=alertParams.jobSelection)||void 0===_alertParams$jobSelec5?void 0:_alertParams$jobSelec5.groupIds)&&(null===(_alertParams$jobSelec6=alertParams.jobSelection)||void 0===_alertParams$jobSelec6?void 0:_alertParams$jobSelec6.groupIds.length)>0||Array.isArray(null===(_alertParams$jobSelec7=alertParams.jobSelection)||void 0===_alertParams$jobSelec7?void 0:_alertParams$jobSelec7.jobIds)&&(null===(_alertParams$jobSelec8=alertParams.jobSelection)||void 0===_alertParams$jobSelec8?void 0:_alertParams$jobSelec8.jobIds.length)>1)&&validationResult.errors.jobSelection.push(external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.singleJobSelection.errorMessage",{defaultMessage:"Only one job per rule is allowed"})),void 0===alertParams.severity&&validationResult.errors.severity.push(external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.severity.errorMessage",{defaultMessage:"Anomaly severity is required"})),void 0===alertParams.resultType&&validationResult.errors.resultType.push(external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.resultType.errorMessage",{defaultMessage:"Result type is required"})),alertParams.lookbackInterval&&validateLookbackInterval(alertParams.lookbackInterval)&&validationResult.errors.lookbackInterval.push(external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.lookbackInterval.errorMessage",{defaultMessage:"Lookback interval is invalid"})),"number"==typeof alertParams.topNBuckets&&validateTopNBucket(alertParams.topNBuckets)&&validationResult.errors.topNBuckets.push(external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.topNBuckets.errorMessage",{defaultMessage:"Number of buckets is invalid"})),validationResult},requiresAppContext:!1,defaultActionMessage:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.alertTypes.anomalyDetection.defaultActionMessage",{defaultMessage:"Elastic Stack Machine Learning Alert:\n- Job IDs: \\{\\{context.jobIds\\}\\}\n- Time: \\{\\{context.timestampIso8601\\}\\}\n- Anomaly score: \\{\\{context.score\\}\\}\n\n\\{\\{context.message\\}\\}\n\n\\{\\{#context.topInfluencers.length\\}\\}\n  Top influencers:\n  \\{\\{#context.topInfluencers\\}\\}\n    \\{\\{influencer_field_name\\}\\} = \\{\\{influencer_field_value\\}\\} [\\{\\{score\\}\\}]\n  \\{\\{/context.topInfluencers\\}\\}\n\\{\\{/context.topInfluencers.length\\}\\}\n\n\\{\\{#context.topRecords.length\\}\\}\n  Top records:\n  \\{\\{#context.topRecords\\}\\}\n    \\{\\{function\\}\\}(\\{\\{field_name\\}\\}) \\{\\{by_field_value\\}\\} \\{\\{over_field_value\\}\\} \\{\\{partition_field_value\\}\\} [\\{\\{score\\}\\}]\n  \\{\\{/context.topRecords\\}\\}\n\\{\\{/context.topRecords.length\\}\\}\n\n\\{\\{! Replace kibanaBaseUrl if not configured in Kibana \\}\\}\n[Open in Anomaly Explorer](\\{\\{\\{kibanaBaseUrl\\}\\}\\}\\{\\{\\{context.anomalyExplorerUrl\\}\\}\\})\n"})}),alerting&&function(alerting){alerting.registerNavigation(app.e,alerts.b.ANOMALY_DETECTION,alert=>{var _alertParams$jobSelec9,_alertParams$jobSelec10;const alertParams=alert.params,jobIds=[...new Set([...null!==(_alertParams$jobSelec9=alertParams.jobSelection.jobIds)&&void 0!==_alertParams$jobSelec9?_alertParams$jobSelec9:[],...null!==(_alertParams$jobSelec10=alertParams.jobSelection.groupIds)&&void 0!==_alertParams$jobSelec10?_alertParams$jobSelec10:[]])];return Object(anomaly_detection_urls_generator.d)("",{jobIds:jobIds})})}(alerting)}}}]);