/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[1],{122:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return formatValue})),__webpack_require__.d(__webpack_exports__,"a",(function(){return formatSingleValue}));var moment__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(15),moment__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);function formatValue(value,mlFunction,fieldFormat,record){if(Array.isArray(value)){if(1===value.length)return formatSingleValue(value[0],mlFunction,fieldFormat,record);return`[${value.map(val=>formatSingleValue(val,mlFunction,void 0,record))}]`}return formatSingleValue(value,mlFunction,fieldFormat,record)}function formatSingleValue(value,mlFunction,fieldFormat,record){if(null==value)return"";if("time_of_week"===mlFunction){const d=void 0!==record&&void 0!==record.timestamp?new Date(record.timestamp):new Date,utcMoment=moment__WEBPACK_IMPORTED_MODULE_0___default.a.utc(d).startOf("week").add(value,"s");return moment__WEBPACK_IMPORTED_MODULE_0___default()(utcMoment.valueOf()).format("ddd HH:mm")}if("time_of_day"===mlFunction){const d=void 0!==record&&void 0!==record.timestamp?new Date(record.timestamp):new Date,utcMoment=moment__WEBPACK_IMPORTED_MODULE_0___default.a.utc(d).startOf("day").add(value,"s");return moment__WEBPACK_IMPORTED_MODULE_0___default()(utcMoment.valueOf()).format("HH:mm")}if(void 0!==fieldFormat)return fieldFormat.convert(value,"text");{const absValue=Math.abs(value);if(absValue>=1e4||absValue===Math.floor(absValue))return void 0!==fieldFormat?fieldFormat.convert(value,"text"):Number(value.toFixed(0));if(absValue>=10)return Number(value.toFixed(1));{let multiple;return multiple=value>0?Math.pow(10,3-Math.floor(Math.log(value)/Math.LN10)-1):Math.pow(10,3-Math.floor(Math.log(-1*value)/Math.LN10)-1),Math.round(value*multiple)/multiple}}}},132:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return mlFieldFormatService}));var _common_util_job_utils__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(69),_util_index_utils__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(82),_job_service__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(70);function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}const mlFieldFormatService=new class{constructor(){_defineProperty(this,"indexPatternIdsByJob",{}),_defineProperty(this,"formatsByJob",{})}populateFormats(jobIds){return new Promise((resolve,reject)=>{jobIds.forEach(jobId=>{const datafeedIndices=_job_service__WEBPACK_IMPORTED_MODULE_2__.a.getJob(jobId).datafeed_config.indices,id=Object(_util_index_utils__WEBPACK_IMPORTED_MODULE_1__.c)(datafeedIndices.length?datafeedIndices[0]:"");null!==id&&(this.indexPatternIdsByJob[jobId]=id)});const promises=jobIds.map(jobId=>Promise.all([this.getFormatsForJob(jobId)]));Promise.all(promises).then(fmtsByJobByDetector=>{fmtsByJobByDetector.forEach((formatsByDetector,i)=>{this.formatsByJob[jobIds[i]]=formatsByDetector[0]}),resolve(this.formatsByJob)}).catch(err=>{reject({formats:{},err:err})})})}getFieldFormat(jobId,detectorIndex){if(this.formatsByJob.hasOwnProperty(jobId))return this.formatsByJob[jobId][detectorIndex]}getFieldFormatFromIndexPattern(fullIndexPattern,fieldName,esAggName){let fieldFormat;if("cardinality"!==esAggName){const field=fullIndexPattern.fields.getByName(fieldName);void 0!==field&&(fieldFormat=fullIndexPattern.getFormatterForField(field))}return fieldFormat}getFormatsForJob(jobId){return new Promise((resolve,reject)=>{const detectors=_job_service__WEBPACK_IMPORTED_MODULE_2__.a.getJob(jobId).analysis_config.detectors||[],formatsByDetector=[],indexPatternId=this.indexPatternIdsByJob[jobId];void 0!==indexPatternId?Object(_util_index_utils__WEBPACK_IMPORTED_MODULE_1__.b)(indexPatternId).then(indexPatternData=>{const fieldList=indexPatternData.fields;detectors.forEach(dtr=>{const esAgg=Object(_common_util_job_utils__WEBPACK_IMPORTED_MODULE_0__.q)(dtr.function);if(void 0!==dtr.field_name&&"cardinality"!==esAgg){const field=fieldList.getByName(dtr.field_name);void 0!==field&&(formatsByDetector[dtr.detector_index]=indexPatternData.getFormatterForField(field))}}),resolve(formatsByDetector)}).catch(err=>{reject(err)}):resolve(formatsByDetector)})}}},70:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return mlJobService}));var external_kbnSharedDeps_Lodash_=__webpack_require__(7),external_kbnSharedDeps_Moment_=__webpack_require__(15),external_kbnSharedDeps_Moment_default=__webpack_require__.n(external_kbnSharedDeps_Moment_),external_kbnSharedDeps_KbnI18n_=__webpack_require__(2),ml_api_service=__webpack_require__(64),toast_notification_service=__webpack_require__(73);function isWebUrl(url){const absoluteUrl=function(url){const a=document.createElement("a");return a.setAttribute("href",url),a.href}(url);return/^https?:\/\//.test(absoluteUrl)}var time_format=__webpack_require__(130),parse_interval=__webpack_require__(26),date_utils=__webpack_require__(72);let jobs=[],datafeedIds={};function createResultsUrl(jobIds,start,end,resultsPage,mode="absolute"){const idString=jobIds.map(j=>`'${j}'`).join(",");let from,to,path="";return void 0!==resultsPage&&(path+=resultsPage),"quick"===mode?(from=start,to=end):(from=external_kbnSharedDeps_Moment_default()(start).toISOString(),to=external_kbnSharedDeps_Moment_default()(end).toISOString()),path+=`?_g=(ml:(jobIds:!(${idString}))`,path+=`,refreshInterval:(display:Off,pause:!t,value:0),time:(from:'${from}'`,path+=`,to:'${to}'`,"invalid"===mode&&(path+=",mode:invalid"),path+="))&_a=(query:(query_string:(analyze_wildcard:!t,query:'*')))",path}const mlJobService=new class{constructor(){var obj,key,value;value=()=>this.loadJobs().then((function(resp){return resp})).catch((function(error){console.log("Error loading jobs in route resolve.",error),Promise.resolve([])})),(key="loadJobsWrapper")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,this.tempJobCloningObjects={createdBy:void 0,datafeed:void 0,job:void 0,skipTimeRangeStep:!1,start:void 0,end:void 0,calendars:void 0},this.jobs=[],this.basicJobs={},this.jobDescriptions={},this.detectorsByJob={},this.customUrlsByJob={},this.jobStats={activeNodes:{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.jobService.activeMLNodesLabel",{defaultMessage:"Active ML nodes"}),value:0,show:!0},total:{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.jobService.totalJobsLabel",{defaultMessage:"Total jobs"}),value:0,show:!0},open:{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.jobService.openJobsLabel",{defaultMessage:"Open jobs"}),value:0,show:!0},closed:{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.jobService.closedJobsLabel",{defaultMessage:"Closed jobs"}),value:0,show:!0},failed:{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.jobService.failedJobsLabel",{defaultMessage:"Failed jobs"}),value:0,show:!1},activeDatafeeds:{label:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.jobService.activeDatafeedsLabel",{defaultMessage:"Active datafeeds"}),value:0,show:!0}}}getBlankJob(){return{job_id:"",description:"",groups:[],analysis_config:{bucket_span:"15m",influencers:[],detectors:[]},data_description:{time_field:"",time_format:"",field_delimiter:"",quote_character:'"',format:"delimited"}}}loadJobs(){return new Promise((resolve,reject)=>{function error(err){console.log("jobService error getting list of jobs:",err),Object(toast_notification_service.a)().displayErrorToast(err),reject({jobs:jobs,err:err})}jobs=[],datafeedIds={},ml_api_service.ml.getJobs().then(resp=>{jobs=resp.jobs,ml_api_service.ml.getJobStats().then(statsResp=>{for(let i=0;i<jobs.length;i++){const job=jobs[i];job.data_counts={},job.model_size_stats={},job.datafeed_config={};for(let j=0;j<statsResp.jobs.length;j++){const jobStats=statsResp.jobs[j];job.job_id===jobStats.job_id&&(job.state=jobStats.state,job.data_counts=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(jobStats.data_counts),job.model_size_stats=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(jobStats.model_size_stats),jobStats.node&&(job.node=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(jobStats.node)),jobStats.open_time&&(job.open_time=jobStats.open_time))}}this.loadDatafeeds().then(datafeedsResp=>{for(let i=0;i<jobs.length;i++)for(let j=0;j<datafeedsResp.datafeeds.length;j++)jobs[i].job_id===datafeedsResp.datafeeds[j].job_id&&(jobs[i].datafeed_config=datafeedsResp.datafeeds[j],datafeedIds[jobs[i].job_id]=datafeedsResp.datafeeds[j].datafeed_id);!function(localJobService,jobsList){const processedJobsList=[],detectorsByJob={},customUrlsByJob={},jobsListCopy=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(jobsList);Object(external_kbnSharedDeps_Lodash_.each)(jobsListCopy,jobObj=>{const analysisConfig=jobObj.analysis_config,bucketSpan=Object(parse_interval.a)(analysisConfig.bucket_span),job={id:jobObj.job_id,bucketSpanSeconds:bucketSpan.asSeconds()};void 0!==jobObj.description&&!1===/^\s*$/.test(jobObj.description)?job.description=jobObj.description:job.description=jobObj.job_id,job.detectors=Object(external_kbnSharedDeps_Lodash_.get)(analysisConfig,"detectors",[]),detectorsByJob[job.id]=job.detectors,void 0!==jobObj.custom_settings&&void 0!==jobObj.custom_settings.custom_urls&&(job.customUrls=[],Object(external_kbnSharedDeps_Lodash_.each)(jobObj.custom_settings.custom_urls,url=>{void 0!==url.url_name&&void 0!==url.url_value&&isWebUrl(url.url_value)&&job.customUrls.push(url)}),job.customUrls.length>0&&(customUrlsByJob[job.id]=job.customUrls)),localJobService.jobDescriptions[job.id]=job.description,localJobService.basicJobs[job.id]=job,processedJobsList.push(job)}),localJobService.detectorsByJob=detectorsByJob,localJobService.customUrlsByJob=customUrlsByJob}(this,jobs),this.jobs=jobs,resolve({jobs:this.jobs})})}).catch(err=>{error(err)})}).catch(err=>{error(err)})})}refreshJob(jobId){return new Promise((resolve,reject)=>{function error(err){console.log("JobService error getting list of jobs:",err),Object(toast_notification_service.a)().displayErrorToast(err),reject({jobs:jobs,err:err})}ml_api_service.ml.getJobs({jobId:jobId}).then(resp=>{if(resp.jobs&&resp.jobs.length){const newJob=resp.jobs[0];ml_api_service.ml.getJobStats({jobId:jobId}).then(statsResp=>{for(let j=0;j<statsResp.jobs.length;j++)if(newJob.job_id===statsResp.jobs[j].job_id){const statsJob=statsResp.jobs[j];newJob.state=statsJob.state,newJob.data_counts={},newJob.model_size_stats={},newJob.data_counts=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(statsJob.data_counts),newJob.model_size_stats=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(statsJob.model_size_stats),newJob.node&&(newJob.node=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(statsJob.node)),statsJob.open_time&&(newJob.open_time=statsJob.open_time)}for(let i=0;i<jobs.length;i++)jobs[i].job_id===newJob.job_id&&(jobs[i]=newJob);const datafeedId=this.getDatafeedId(jobId);this.loadDatafeeds(datafeedId).then(datafeedsResp=>{for(let i=0;i<jobs.length;i++)for(let j=0;j<datafeedsResp.datafeeds.length;j++)jobs[i].job_id===datafeedsResp.datafeeds[j].job_id&&(jobs[i].datafeed_config=datafeedsResp.datafeeds[j],datafeedIds[jobs[i].job_id]=datafeedsResp.datafeeds[j].datafeed_id);this.jobs=jobs,resolve({jobs:this.jobs})})}).catch(err=>{error(err)})}}).catch(err=>{error(err)})})}loadDatafeeds(datafeedId){return new Promise((resolve,reject)=>{const sId=void 0!==datafeedId?{datafeed_id:datafeedId}:void 0;function error(err){console.log("loadDatafeeds error getting list of datafeeds:",err),Object(toast_notification_service.a)().displayErrorToast(err),reject({jobs:jobs,err:err})}ml_api_service.ml.getDatafeeds(sId).then(resp=>{const datafeeds=resp.datafeeds;ml_api_service.ml.getDatafeedStats().then(statsResp=>{for(let i=0;i<datafeeds.length;i++){const datafeed=datafeeds[i];for(let j=0;j<statsResp.datafeeds.length;j++)datafeed.datafeed_id===statsResp.datafeeds[j].datafeed_id&&(datafeed.state=statsResp.datafeeds[j].state)}resolve({datafeeds:datafeeds})}).catch(err=>{error(err)})}).catch(err=>{error(err)})})}updateSingleJobDatafeedState(jobId){return new Promise((resolve,reject)=>{const datafeedId=this.getDatafeedId(jobId);ml_api_service.ml.getDatafeedStats({datafeedId:datafeedId}).then(resp=>{const datafeeds=resp.datafeeds;let state="UNKNOWN";datafeeds&&datafeeds.length&&(state=datafeeds[0].state),resolve(state)}).catch(resp=>{reject(resp)})})}saveNewJob(job){function func(resp){console.log("Response for job query:",resp);return{success:function(resp,origJob){if(!resp)return console.log("checkSaveResponse(): response is empty"),!1;if(resp.job_id){if(resp.job_id===origJob.job_id)return console.log("checkSaveResponse(): save successful"),!0}else if(resp.errorCode)return console.log("checkSaveResponse(): save failed",resp),!1}(resp,job),job:job,resp:resp}}return ml_api_service.ml.addJob({jobId:job.job_id,job:job}).then(func).catch(func)}cloneDatafeed(datafeed){const tempDatafeed=Object(external_kbnSharedDeps_Lodash_.cloneDeep)(datafeed);return tempDatafeed&&(delete tempDatafeed.datafeed_id,delete tempDatafeed.job_id),tempDatafeed}getJob(jobId){return Object(external_kbnSharedDeps_Lodash_.find)(jobs,j=>j.job_id===jobId)}searchPreview(combinedJob){const{datafeed_config:datafeed,...job}=combinedJob;return ml_api_service.ml.jobs.datafeedPreview(job,datafeed)}openJob(jobId){return ml_api_service.ml.openJob({jobId:jobId})}closeJob(jobId){return ml_api_service.ml.closeJob({jobId:jobId})}saveNewDatafeed(datafeedConfig,jobId){const datafeedId="datafeed-"+jobId;return datafeedConfig.job_id=jobId,ml_api_service.ml.addDatafeed({datafeedId:datafeedId,datafeedConfig:datafeedConfig})}startDatafeed(datafeedId,jobId,start,end){return new Promise((resolve,reject)=>{Object(external_kbnSharedDeps_Lodash_.isNumber)(end)&&end++,ml_api_service.ml.startDatafeed({datafeedId:datafeedId,start:start,end:end}).then(resp=>{resolve(resp)}).catch(err=>{console.log("jobService error starting datafeed:",err),reject(err)})})}forceStartDatafeeds(dIds,start,end){return ml_api_service.ml.jobs.forceStartDatafeeds(dIds,start,end)}stopDatafeeds(dIds){return ml_api_service.ml.jobs.stopDatafeeds(dIds)}deleteJobs(jIds){return ml_api_service.ml.jobs.deleteJobs(jIds)}closeJobs(jIds){return ml_api_service.ml.jobs.closeJobs(jIds)}validateDetector(detector){return new Promise((resolve,reject)=>{detector?ml_api_service.ml.validateDetector({detector:detector}).then(resp=>{resolve(resp)}).catch(resp=>{reject(resp)}):reject({})})}getDatafeedId(jobId){let datafeedId=datafeedIds[jobId];return void 0===datafeedId&&(datafeedId="datafeed-"+jobId),datafeedId}getDatafeedPreview(datafeedId){return ml_api_service.ml.datafeedPreview({datafeedId:datafeedId})}getJobGroups(){const groups=[],tempGroups={};return this.jobs.forEach(job=>{Array.isArray(job.groups)&&job.groups.forEach(group=>{void 0===tempGroups[group]?tempGroups[group]=[job]:tempGroups[group].push(job)})}),Object(external_kbnSharedDeps_Lodash_.each)(tempGroups,(js,id)=>{groups.push({id:id,jobs:js})}),groups}createResultsUrlForJobs(jobsList,resultsPage,timeRange){return function(jobsList,resultsPage,userTimeRange){let from=void 0,to=void 0,mode="absolute";const jobIds=jobsList.map(j=>j.id);if(Object(date_utils.e)(userTimeRange)){from=userTimeRange.from,to=userTimeRange.to;const fromFieldAValidDate=external_kbnSharedDeps_Moment_default()(userTimeRange.from).isValid(),toFieldAValidDate=external_kbnSharedDeps_Moment_default()(userTimeRange.to).isValid();if(!fromFieldAValidDate&&!toFieldAValidDate)return createResultsUrl(jobIds,from,to,resultsPage,"quick")}else if(userTimeRange&&(mode="invalid"),1===jobsList.length)from=jobsList[0].earliestTimestampMs,to=jobsList[0].latestResultsTimestampMs;else{const jobsWithData=jobsList.filter(j=>void 0!==j.earliestTimestampMs);jobsWithData.length>0&&(from=Math.min(...jobsWithData.map(j=>j.earliestTimestampMs)),to=Math.max(...jobsWithData.map(j=>j.latestResultsTimestampMs)))}const fromString=external_kbnSharedDeps_Moment_default()(from).format(time_format.a),toString=external_kbnSharedDeps_Moment_default()(to).format(time_format.a);return createResultsUrl(jobIds,fromString,toString,resultsPage,mode)}(jobsList,resultsPage,timeRange)}createResultsUrl(jobIds,from,to,resultsPage){return createResultsUrl(jobIds,from,to,resultsPage)}async getJobAndGroupIds(){try{return await ml_api_service.ml.jobs.getAllJobAndGroupIds()}catch(error){return{jobIds:[],groupIds:[]}}}}},73:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return toastNotificationServiceProvider})),__webpack_require__.d(__webpack_exports__,"c",(function(){return useToastNotificationService})),__webpack_require__.d(__webpack_exports__,"a",(function(){return getToastNotificationService}));var external_kbnSharedDeps_KbnI18n_=__webpack_require__(2),external_kbnSharedDeps_React_=__webpack_require__(14),dependency_cache=__webpack_require__(22),kibana=__webpack_require__(63),errors=__webpack_require__(24);function toastNotificationServiceProvider(toastNotifications){return{displayDangerToast:function(toastOrTitle,options){toastNotifications.addDanger(toastOrTitle,options)},displayWarningToast:function(toastOrTitle,options){toastNotifications.addWarning(toastOrTitle,options)},displaySuccessToast:function(toastOrTitle,options){toastNotifications.addSuccess(toastOrTitle,options)},displayErrorToast:function(error,title,toastLifeTimeMs){const errorObj=Object(errors.j)(error);toastNotifications.addError(new errors.g(errorObj,error),{title:null!=title?title:external_kbnSharedDeps_KbnI18n_.i18n.translate("xpack.ml.toastNotificationService.errorTitle",{defaultMessage:"An error has occurred"}),...toastLifeTimeMs?{toastLifeTimeMs:toastLifeTimeMs}:{}})}}}function getToastNotificationService(){return toastNotificationServiceProvider(Object(dependency_cache.j)())}function useToastNotificationService(){const{toasts:toasts}=Object(kibana.f)();return Object(external_kbnSharedDeps_React_.useMemo)(()=>toastNotificationServiceProvider(toasts),[])}},82:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"h",(function(){return loadIndexPatterns})),__webpack_require__.d(__webpack_exports__,"i",(function(){return loadSavedSearches})),__webpack_require__.d(__webpack_exports__,"e",(function(){return getIndexPatternsContract})),__webpack_require__.d(__webpack_exports__,"d",(function(){return getIndexPatternNames})),__webpack_require__.d(__webpack_exports__,"c",(function(){return getIndexPatternIdFromName})),__webpack_require__.d(__webpack_exports__,"a",(function(){return getIndexPatternAndSavedSearch})),__webpack_require__.d(__webpack_exports__,"f",(function(){return getQueryFromSavedSearch})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getIndexPatternById})),__webpack_require__.d(__webpack_exports__,"j",(function(){return timeBasedIndexCheck})),__webpack_require__.d(__webpack_exports__,"g",(function(){return isCcsIndexPattern}));var _kbn_i18n__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(2),_dependency_cache__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(22);let indexPatternCache=[],savedSearchesCache=[],indexPatternsContract=null;function loadIndexPatterns(indexPatterns){indexPatternsContract=indexPatterns;return Object(_dependency_cache__WEBPACK_IMPORTED_MODULE_1__.h)().find({type:"index-pattern",fields:["id","title","type","fields"],perPage:1e4}).then(response=>(indexPatternCache=response.savedObjects,indexPatternCache))}function loadSavedSearches(){return Object(_dependency_cache__WEBPACK_IMPORTED_MODULE_1__.h)().find({type:"search",perPage:1e4}).then(response=>(savedSearchesCache=response.savedObjects,savedSearchesCache))}function getIndexPatternsContract(){return indexPatternsContract}function getIndexPatternNames(){return indexPatternCache.map(i=>i.attributes&&i.attributes.title)}function getIndexPatternIdFromName(name){for(let j=0;j<indexPatternCache.length;j++)if(indexPatternCache[j].get("title")===name)return indexPatternCache[j].id;return null}async function getIndexPatternAndSavedSearch(savedSearchId){var _ss$references$find;const resp={savedSearch:null,indexPattern:null};if(void 0===savedSearchId)return resp;const ss=await async function(id){const savedObjectsClient=Object(_dependency_cache__WEBPACK_IMPORTED_MODULE_1__.h)(),ss=await savedObjectsClient.get("search",id);return void 0===ss.error?ss:null}(savedSearchId);if(null===ss)return resp;const indexPatternId=null===(_ss$references$find=ss.references.find(r=>"index-pattern"===r.type))||void 0===_ss$references$find?void 0:_ss$references$find.id;return resp.indexPattern=await getIndexPatternById(indexPatternId),resp.savedSearch=ss,resp}function getQueryFromSavedSearch(savedSearch){const search=savedSearch.attributes.kibanaSavedObjectMeta;return JSON.parse(search.searchSourceJSON)}function getIndexPatternById(id){if(null!==indexPatternsContract)return id?indexPatternsContract.get(id):indexPatternsContract.create({});throw new Error("Index patterns are not initialized!")}function timeBasedIndexCheck(indexPattern,showNotification=!1){if(indexPattern.isTimeBased())return!0;if(showNotification){Object(_dependency_cache__WEBPACK_IMPORTED_MODULE_1__.j)().addWarning({title:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.ml.indexPatternNotBasedOnTimeSeriesNotificationTitle",{defaultMessage:"The index pattern {indexPatternTitle} is not based on a time series",values:{indexPatternTitle:indexPattern.title}}),text:_kbn_i18n__WEBPACK_IMPORTED_MODULE_0__.i18n.translate("xpack.ml.indexPatternNotBasedOnTimeSeriesNotificationDescription",{defaultMessage:"Anomaly detection only runs over time-based indices"})})}return!1}function isCcsIndexPattern(indexPatternTitle){return indexPatternTitle.includes(":")}}}]);