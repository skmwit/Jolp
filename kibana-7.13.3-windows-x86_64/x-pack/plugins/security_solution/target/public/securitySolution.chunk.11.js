/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.securitySolution_bundle_jsonpfunction=window.securitySolution_bundle_jsonpfunction||[]).push([[11],{1123:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"resolverPluginSetup",(function(){return resolverPluginSetup}));var lib=__webpack_require__(110),store=__webpack_require__(716),resolver_without_providers=__webpack_require__(711);function mockEndpointEvent({entityID:entityID,processName:processName="process name",parentEntityID:parentEntityID,timestamp:timestamp=0,eventType:eventType="start",eventCategory:eventCategory="process",pid:pid=0,eventID:eventID="event id"}){return{"@timestamp":timestamp,event:{type:eventType,category:eventCategory,id:String(eventID)},agent:{id:"agent.id",version:"agent.version",type:"agent.type"},ecs:{version:"ecs.version"},user:{name:"user.name",domain:"user.domain"},process:{entity_id:entityID,executable:"executable",args:["args0","args1","args2"],name:processName,pid:pid,hash:{md5:"hash.md5"},parent:{pid:0,entity_id:parentEntityID}}}}var models_event=__webpack_require__(203),node=__webpack_require__(193);function mockResolverNode({id:id,name:name="node",timestamp:timestamp,parentID:parentID,stats:stats={total:0,byCategory:{}}}){return{id:id,name:name,stats:stats,parent:parentID,data:{"@timestamp":timestamp,"process.entity_id":id,"process.name":name,"process.parent.entity_id":parentID}}}function mockTreeWithNoAncestorsAndTwoChildrenAndRelatedEventsOnOrigin({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const{resolverTree:resolverTree,nodeDataResponse:nodeDataResponse}=function({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}){const originProcessEvent=mockEndpointEvent({pid:0,entityID:originID,processName:"c.ext",parentEntityID:"none",timestamp:1600863932316}),firstChildProcessEvent=mockEndpointEvent({pid:1,entityID:firstChildID,processName:"d",parentEntityID:originID,timestamp:1600863932317}),secondChildProcessEvent=mockEndpointEvent({pid:2,entityID:secondChildID,processName:"really_really_really_really_really_really_really_really_really_really_really_really_really_really_long_node_name",parentEntityID:originID,timestamp:1600863932318}),treeResponse=[mockResolverNode({id:originID,name:"c.ext",stats:{total:2,byCategory:{}},timestamp:1600863932316}),mockResolverNode({id:firstChildID,name:"d",parentID:originID,timestamp:1600863932317}),mockResolverNode({id:secondChildID,name:"really_really_really_really_really_really_really_really_really_really_really_really_really_really_long_node_name",parentID:originID,timestamp:1600863932318})];return{treeResponse:treeResponse,resolverTree:{originID:originID,nodes:treeResponse},relatedEvents:{entityID:originID,events:[],nextEvent:null},nodeDataResponse:[originProcessEvent,firstChildProcessEvent,secondChildProcessEvent]}}({originID:originID,firstChildID:firstChildID,secondChildID:secondChildID}),parentEntityID=node.d(resolverTree.nodes.find(node=>node.id===originID)),relatedEvents=[mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:"id of first related event",eventType:"access",eventCategory:"registry"}),mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:"id of second related event",eventType:"access",eventCategory:"registry"})],categories=["authentication","database","driver","file","host","iam","intrusion_detection","malware","network","package","process","web"];for(const category of categories)relatedEvents.push(mockEndpointEvent({entityID:originID,parentEntityID:parentEntityID,eventID:""+relatedEvents.length,eventType:"access",eventCategory:category}));return function(tree,events,nodeDataResponse,originID){const stats={total:0,byCategory:{}};for(const event of events){stats.total++;for(const category of models_event.c(event))stats.byCategory[category]=stats.byCategory[category]?stats.byCategory[category]+1:1}const originNode=tree.nodes.find(node=>node.id===originID);return originNode&&(originNode.stats=stats),{tree:tree,relatedEvents:{entityID:originID,events:events,nextEvent:null},nodeDataResponse:nodeDataResponse}}(resolverTree,relatedEvents,nodeDataResponse,originID)}function noAncestorsTwoChildrenWithRelatedEventsOnOrigin(){const metadata={databaseDocumentID:"_id",entityIDs:{origin:"origin",firstChild:"firstChild",secondChild:"secondChild"}},{tree:tree,relatedEvents:relatedEvents,nodeDataResponse:nodeDataResponse}=mockTreeWithNoAncestorsAndTwoChildrenAndRelatedEventsOnOrigin({originID:metadata.entityIDs.origin,firstChildID:metadata.entityIDs.firstChild,secondChildID:metadata.entityIDs.secondChild});return{metadata:metadata,dataAccessLayer:{relatedEvents:async({entityID:entityID,timeRange:timeRange,indexPatterns:indexPatterns})=>({entityID:entityID,events:entityID===metadata.entityIDs.origin?relatedEvents.events:[],nextEvent:null}),eventsWithEntityIDAndCategory:async({entityID:entityID,category:category,after:after,timeRange:timeRange,indexPatterns:indexPatterns})=>({events:entityID===metadata.entityIDs.origin?relatedEvents.events.filter(event=>models_event.c(event).includes(category)):[],nextEvent:null}),async event({nodeID:nodeID,eventID:eventID,eventCategory:eventCategory,eventTimestamp:eventTimestamp,winlogRecordID:winlogRecordID,timeRange:timeRange,indexPatterns:indexPatterns}){var _relatedEvents$events;return null!==(_relatedEvents$events=relatedEvents.events.find(event=>models_event.d(event)===eventID))&&void 0!==_relatedEvents$events?_relatedEvents$events:null},nodeData:async({ids:ids,timeRange:timeRange,indexPatterns:indexPatterns,limit:limit})=>nodeDataResponse,resolverTree:async({dataId:dataId,schema:schema,timeRange:timeRange,indices:indices,ancestors:ancestors,descendants:descendants})=>tree.nodes,entities:async()=>[{name:"endpoint",schema:{id:"process.entity_id",parent:"process.parent.entity_id",ancestry:"process.Ext.ancestry",name:"process.name"},id:metadata.entityIDs.origin}]}}}function resolverPluginSetup(){return{Provider:lib.Provider,storeFactory:store.a,ResolverWithoutProviders:resolver_without_providers.a,mocks:{dataAccessLayer:{noAncestorsTwoChildrenWithRelatedEventsOnOrigin:noAncestorsTwoChildrenWithRelatedEventsOnOrigin}}}}}}]);